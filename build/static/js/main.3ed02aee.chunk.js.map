{"version":3,"sources":["../../../nfl-fantasy-stats/fantasy_stats.js","logo.svg","components/PlayerTable.js","components/DraftedPlayers.js","components/PlayerInfoModal.js","components/DraftBoard.js","App.js","index.js"],"names":["axios","__webpack_require__","cheerio","pfrDict","SF","NE","MIA","BUF","NYJ","BAL","PIT","CLE","CIN","HOU","IND","TEN","JAX","KC","GB","LAC","DEN","OAK","DAL","PHI","WAS","NYG","CHI","MIN","DET","NO","ATL","CAR","TB","LAR","SEA","ARI","scrapePlayerStats","player","html","COMMENT_PSEUDO_COMMENT_OR_LT_BANG","RegExp","data","replace","$","load","picture","attr","pos","row","name","interceptions","eq","text","pick_six","sacks","forced_fumbles","safties","playerStats","ir","career","info","find","length","injury","years","each","i","obj","year","substring","push","age","team","season","position","number","games","games_started","skills","attempts","yards","touchdowns","longest_attempt","yards_per_attempt","yards_per_game","attempts_per_game","targets","receptions","yard_per_reception","longest_reception","receptions_per_game","catch_percentage","yards_per_target","summary","touches","yards_per_touch","scrimmage","total_touchdowns","fumbles","qb_record","completions","completion_percentage","touchdown_percentage","interception_percentage","longest_completion","adjusted_yards_per_attempt","yards_per_completion","qbr","_years","_years2","0-19","made","20-29","30-39","40-49","50+","total","extra_points","scrapePlayerGameLogs","logs","a","date","day","won","opp","home","points_allowed","stats","defense","passing","rushing","kicking","field_goals","third_downs","conversions","punts","result","sacked","recieving","yards_per_reception","getLastInitial","nameArray","trim","toUpperCase","split","charAt","module","exports","getADP","Promise","resolve","reject","get","headers","origin","then","resp","players","RB","QB","WR","DEF","PK","TE","elem","pick","bye","scrapeADP","catch","err","getPlayerStats","pfr","teamPage","concat","initial","res","teamYearSum","console","log","playersPageURL","playersPage","pfrTag","toLowerCase","search","statsPageRef","statsPageURL","getPlayerGameLogs","defStatsPageRef","teamYearSumPage","currentYearLogsRef","statsPage","last","currentYearLogsURL","p","PlayerTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","tdFn","state","rowInfo","column","instance","onClick","e","handleOriginal","Header","displayInfo","original","rowFn","drafted","style","background","picked","toggleDrafted","bind","assertThisInitialized","togglePicked","togglePick","toggleDraft","_this2","forEach","columns","id","accessor","Cell","_ref","react_default","createElement","Checkbox","checked","onChange","color","_ref2","es","getTrProps","getTdProps","Component","DraftedPlayers","calories","fat","carbs","protein","Paper","Table","TableHead","TableRow","TableCell","TableBody","draftedPlayers","map","key","align","broker","require","PlayerInfoModal","playerInfo","all","setState","_this3","cur","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","Box","m","Grid","container","item","md","Avatar","alt","src","margin","width","height","yearLabels","yearRushTds","yearRecievingTds","yearRushYards","yearRecievingYards","parseFloat","gameLabels","perGameRushTds","perGameRecievingTds","perGameRecievingYards","perGameRushYards","game","yearTdData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","yearYardData","gameTdData","gameYardData","sm","react_chartjs_2_es","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","yearPassingTds","yearPassingYards","perGamePassTds","perGamePassYards","perGamePicks","perGameQBR","perGameSacked","Math","abs","gameQBRData","gamePickSackData","extra","chips","twenties","thirties","fourties","fifties","extraAttempted","extraMade","chipsAttempted","chipsMade","twentiesAttempted","twentiesMade","thirtiesAttempted","thirtiesMade","fourtiesAttempted","fourtiesMade","fiftiesAttempted","fiftiesMade","extraData","chipData","twentiesData","thirtiesData","fourtiesData","fiftiesData","pointsAllowed","picks","pickedSackedData","pointsAllowedData","getPlayerInfo","DialogContent","CircularProgress","DraftBoard","adpPlayers","draftPlayer","pickPlayer","displayPlayerInfo","closePlayerInfo","newSelected","assign","draftedClone","toConsumableArray","splice","components_PlayerInfoModal","components_PlayerTable","components_DraftedPlayers","LinearProgress","App","className","AppBar","Toolbar","Typography","variant","components_DraftBoard","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"6EAAA,IAAAA,EAAYC,EAAQ,KAEpBC,EAAcD,EAAQ,KAGtBE,EAAA,CACAC,GAAA,MACAC,GAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,GAAA,MACAC,GAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,GAAA,MACAC,IAAA,MACAC,IAAA,MACAC,GAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,OA+EAC,EAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAC,OAAA,4GAEA,KACAC,EAAAH,EAAAI,QAAAH,EAAA,IACAI,EAAAzC,EAAA0C,KAAAH,GACAI,EAAAF,EAAA,qBAAAG,KAAA,OAEA,WAAAT,EAAAU,IAAA,CACA,IAAAC,EAAAL,EAAA,wBAUA,MATA,CACAM,KAAAZ,EAAAY,KACAJ,UACAK,cAAAF,EAAAG,GAAA,GAAAC,OACAC,SAAAL,EAAAG,GAAA,GAAAC,OACAE,MAAAN,EAAAG,GAAA,IAAAC,OACAG,eAAAP,EAAAG,GAAA,IAAAC,OACAI,QAAAR,EAAAG,GAAA,IAAAC,QAKA,IAAAK,EAAA,CACAR,KAAAZ,EAAAY,KACAJ,UACAa,GAAA,GACAC,OAAA,IAEAD,EAAAf,EAAA,WAEA,GAAAe,EAAA,CACA,IAAAE,EAAAF,EAAAG,KAAA,KAAAT,OAEAQ,EAAAE,OAAA,EACAL,EAAAC,GAAA,CACAK,OAAAH,GAGAH,EAAAC,GAAA,CACAK,OAAA,MAKA,UAAA1B,EAAAU,KAAA,OAAAV,EAAAU,IAAA,CACA,IAAAiB,EAAArB,EAAA,wCA0CA,GAzCAqB,EAAAC,KAAA,SAAAC,EAAAC,GACA,IAAAnB,EAAAL,EAAAwB,GAAAN,KAAA,MACAO,EAAAJ,EAAAH,KAAA,MAAAV,GAAAe,GAAAd,OAAAiB,UAAA,KACAZ,EAAAE,OAAAW,KAAA,CACAC,IAAAvB,EAAAG,GAAA,GAAAC,OACAoB,KAAAxB,EAAAG,GAAA,GAAAU,KAAA,KAAAf,KAAA,SACA2B,OAAAL,EACAM,SAAArC,EAAAU,IACA4B,OAAA3B,EAAAG,GAAA,GAAAC,OACAwB,MAAA5B,EAAAG,GAAA,GAAAC,OACAyB,cAAA7B,EAAAG,GAAA,GAAAC,OACA0B,OAAA,EACAC,SAAA/B,EAAAG,GAAA,GAAAC,OACA4B,MAAAhC,EAAAG,GAAA,GAAAC,OACA6B,WAAAjC,EAAAG,GAAA,GAAAC,OACA8B,gBAAAlC,EAAAG,GAAA,GAAAC,OACA+B,kBAAAnC,EAAAG,GAAA,IAAAC,OACAgC,eAAApC,EAAAG,GAAA,IAAAC,OACAiC,kBAAArC,EAAAG,GAAA,IAAAC,QACS,CACTkC,QAAAtC,EAAAG,GAAA,IAAAC,OACAmC,WAAAvC,EAAAG,GAAA,IAAAC,OACA4B,MAAAhC,EAAAG,GAAA,IAAAC,OACAoC,mBAAAxC,EAAAG,GAAA,IAAAC,OACA6B,WAAAjC,EAAAG,GAAA,IAAAC,OACAqC,kBAAAzC,EAAAG,GAAA,IAAAC,OACAsC,oBAAA1C,EAAAG,GAAA,IAAAC,OACAgC,eAAApC,EAAAG,GAAA,IAAAC,OACAuC,iBAAA3C,EAAAG,GAAA,IAAAC,OACAwC,iBAAA5C,EAAAG,GAAA,IAAAC,SAEAyC,QAAA,CACAC,QAAA9C,EAAAG,GAAA,IAAAC,OACA2C,gBAAA/C,EAAAG,GAAA,IAAAC,OACA4C,UAAAhD,EAAAG,GAAA,IAAAC,OACA6C,iBAAAjD,EAAAG,GAAA,IAAAC,QAEA8C,QAAAlD,EAAAG,GAAA,IAAAC,WAIA,MAAAf,EAAAU,IACAJ,EAAA,0BACAsB,KAAA,SAAAC,EAAAC,GACA,IAAAnB,EAAAL,EAAAwB,GAAAN,KAAA,MACAG,EAAAH,KAAA,MAAAV,GAAAe,GAAAd,OAAAiB,UAAA,KACAZ,EAAAE,OAAAO,GAAAY,OAAAR,KAAA,CACA6B,UAAAnD,EAAAG,GAAA,GAAAC,OACAgD,YAAApD,EAAAG,GAAA,GAAAC,OACA2B,SAAA/B,EAAAG,GAAA,GAAAC,OACAiD,sBAAArD,EAAAG,GAAA,GAAAC,OACA4B,MAAAhC,EAAAG,GAAA,IAAAC,OACA6B,WAAAjC,EAAAG,GAAA,IAAAC,OACAkD,qBAAAtD,EAAAG,GAAA,IAAAC,OACAF,cAAAF,EAAAG,GAAA,IAAAC,OACAmD,wBAAAvD,EAAAG,GAAA,IAAAC,OACAoD,mBAAAxD,EAAAG,GAAA,IAAAC,OACA+B,kBAAAnC,EAAAG,GAAA,IAAAC,OACAqD,2BAAAzD,EAAAG,GAAA,IAAAC,OACAsD,qBAAA1D,EAAAG,GAAA,IAAAC,OACAgC,eAAApC,EAAAG,GAAA,IAAAC,OACAuD,IAAA3D,EAAAG,GAAA,IAAAC,OACAE,MAAAN,EAAAG,GAAA,IAAAC,gBAIG,UAAAf,EAAAU,KAAA,OAAAV,EAAAU,IAAA,CACH,IAAA6D,EAAAjE,EAAA,wCAEAiE,EAAA3C,KAAA,SAAAC,EAAAC,GACA,IAAAnB,EAAAL,EAAAwB,GAAAN,KAAA,MAEAO,EAAAwC,EAAA/C,KAAA,MAAAV,GAAAe,GAAAd,OAAAiB,UAAA,KAEAZ,EAAAE,OAAAW,KAAA,CACAC,IAAAvB,EAAAG,GAAA,GAAAC,OACAoB,KAAAxB,EAAAG,GAAA,GAAAU,KAAA,KAAAf,KAAA,SACA2B,OAAAL,EACAM,SAAArC,EAAAU,IACA4B,OAAA3B,EAAAG,GAAA,GAAAC,OACAwB,MAAA5B,EAAAG,GAAA,GAAAC,OACAyB,cAAA7B,EAAAG,GAAA,GAAAC,OACA0B,OAAA,EACAQ,QAAAtC,EAAAG,GAAA,GAAAC,OACAmC,WAAAvC,EAAAG,GAAA,GAAAC,OACA4B,MAAAhC,EAAAG,GAAA,GAAAC,OACAoC,mBAAAxC,EAAAG,GAAA,GAAAC,OACA6B,WAAAjC,EAAAG,GAAA,IAAAC,OACAqC,kBAAAzC,EAAAG,GAAA,IAAAC,OACAsC,oBAAA1C,EAAAG,GAAA,IAAAC,OACAgC,eAAApC,EAAAG,GAAA,IAAAC,OACAuC,iBAAA3C,EAAAG,GAAA,IAAAC,OACAwC,iBAAA5C,EAAAG,GAAA,IAAAC,QACS,CACT2B,SAAA/B,EAAAG,GAAA,IAAAC,OACA4B,MAAAhC,EAAAG,GAAA,IAAAC,OACA6B,WAAAjC,EAAAG,GAAA,IAAAC,OACA8B,gBAAAlC,EAAAG,GAAA,IAAAC,OACA+B,kBAAAnC,EAAAG,GAAA,IAAAC,OACAgC,eAAApC,EAAAG,GAAA,IAAAC,OACAiC,kBAAArC,EAAAG,GAAA,IAAAC,SAEAyC,QAAA,CACAC,QAAA9C,EAAAG,GAAA,IAAAC,OACA2C,gBAAA/C,EAAAG,GAAA,IAAAC,OACA4C,UAAAhD,EAAAG,GAAA,IAAAC,OACA6C,iBAAAjD,EAAAG,GAAA,IAAAC,QAEA8C,QAAAlD,EAAAG,GAAA,IAAAC,gBAGG,UAAAf,EAAAU,IAAA,CACH,IAAA8D,EAAAlE,EAAA,qBAEAkE,EAAA5C,KAAA,SAAAC,EAAAC,GACA,IAAAnB,EAAAL,EAAAwB,GAAAN,KAAA,MAEAO,EAAAyC,EAAAhD,KAAA,MAAAV,GAAAe,GAAAd,OAAAiB,UAAA,KAEAZ,EAAAE,OAAAW,KAAA,CACAC,IAAAvB,EAAAG,GAAA,GAAAC,OACAoB,KAAAxB,EAAAG,GAAA,GAAAU,KAAA,KAAAf,KAAA,SACA2B,OAAAL,EACAM,SAAArC,EAAAU,IACA4B,OAAA3B,EAAAG,GAAA,GAAAC,OACAwB,MAAA5B,EAAAG,GAAA,GAAAC,OACA0D,OAAA,CACA/B,SAAA/B,EAAAG,GAAA,GAAAC,OACA2D,KAAA/D,EAAAG,GAAA,GAAAC,QAEA4D,QAAA,CACAjC,SAAA/B,EAAAG,GAAA,GAAAC,OACA2D,KAAA/D,EAAAG,GAAA,GAAAC,QAEA6D,QAAA,CACAlC,SAAA/B,EAAAG,GAAA,IAAAC,OACA2D,KAAA/D,EAAAG,GAAA,IAAAC,QAEA8D,QAAA,CACAnC,SAAA/B,EAAAG,GAAA,IAAAC,OACA2D,KAAA/D,EAAAG,GAAA,IAAAC,QAEA+D,MAAA,CACApC,SAAA/B,EAAAG,GAAA,IAAAC,OACA2D,KAAA/D,EAAAG,GAAA,IAAAC,QAEAgE,MAAA,CACArC,SAAA/B,EAAAG,GAAA,IAAAC,OACA2D,KAAA/D,EAAAG,GAAA,IAAAC,QAEAiE,aAAA,CACAtC,SAAA/B,EAAAG,GAAA,IAAAC,OACA2D,KAAA/D,EAAAG,GAAA,IAAAC,YAMA,OAAAK,GAuBA6D,EAAA,SAAAjF,EAAAC,GACA,IAAAC,EAAA,IAAAC,OAAA,4GAEA,KACAC,EAAAH,EAAAI,QAAAH,EAAA,IACAI,EAAAzC,EAAA0C,KAAAH,GACA8E,EAAA,CACA3C,MAAA,IAGA,WAAAvC,EAAAU,IACAJ,EAAA,SAAAQ,GAAA,GAAAU,KAAA,YACAI,KAAA,SAAAC,EAAAC,GACA,IAAAnB,EAAAL,EAAAwB,GAAAN,KAAA,MACA2D,EAAAxE,EAAAa,KAAA,KACA0D,EAAA3C,MAAAN,KAAA,CACAmD,KAAAzE,EAAAG,GAAA,GAAAC,OACAsE,IAAA1E,EAAAG,GAAA,GAAAC,OACAuE,IAAA,MAAA3E,EAAAG,GAAA,GAAAC,OACAwE,IAAAJ,EAAArE,GAAA,GAAAC,OACAyE,KAAA,MAAA7E,EAAAG,GAAA,GAAAC,OACA0E,eAAA9E,EAAAG,GAAA,GAAAC,OACAF,cAAAF,EAAAG,GAAA,IAAAC,OACAE,MAAAN,EAAAG,GAAA,IAAAC,OACA2E,MAAA,CACAC,QAAA,CACAC,QAAA,CACA7B,YAAApD,EAAAG,GAAA,GAAAC,OACA2B,SAAA/B,EAAAG,GAAA,IAAAC,OACA4B,MAAAhC,EAAAG,GAAA,IAAAC,OACA6B,WAAAjC,EAAAG,GAAA,IAAAC,QAEA8E,QAAA,CACAnD,SAAA/B,EAAAG,GAAA,IAAAC,OACA4B,MAAAhC,EAAAG,GAAA,IAAAC,OACA6B,WAAAjC,EAAAG,GAAA,IAAAC,QAEA+E,QAAA,CACAC,YAAA,CACArB,KAAA/D,EAAAG,GAAA,IAAAC,OACA2B,SAAA/B,EAAAG,GAAA,IAAAC,QAEAiE,aAAA,CACAN,KAAA/D,EAAAG,GAAA,IAAAC,OACA2B,SAAA/B,EAAAG,GAAA,IAAAC,SAGAiF,YAAA,CACAC,YAAAtF,EAAAG,GAAA,IAAAC,OACA2B,SAAA/B,EAAAG,GAAA,IAAAC,QAEAmF,MAAAvF,EAAAG,GAAA,IAAAC,kBAKG,UAAAf,EAAAU,IAAA,CACHJ,EAAA,6BAEAsB,KAAA,SAAAC,EAAAC,GACA,IAAAnB,EAAAL,EAAAwB,GAAAN,KAAA,MACA2D,EAAAxE,EAAAa,KAAA,KACA0D,EAAA3C,MAAAN,KAAA,CACAmD,KAAAD,EAAArE,GAAA,GAAAC,OACAmB,IAAAvB,EAAAG,GAAA,GAAAC,OACAwE,IAAAJ,EAAArE,GAAA,GAAAC,OACAyE,KAAA,MAAA7E,EAAAG,GAAA,GAAAC,OACAoF,OAAAhB,EAAArE,GAAA,GAAAC,OACA2E,MAAA,CACAE,QAAA,CACA7B,YAAApD,EAAAG,GAAA,GAAAC,OACA2B,SAAA/B,EAAAG,GAAA,GAAAC,OACAiD,sBAAArD,EAAAG,GAAA,IAAAC,OACA4B,MAAAhC,EAAAG,GAAA,IAAAC,OACA6B,WAAAjC,EAAAG,GAAA,IAAAC,OACAF,cAAAF,EAAAG,GAAA,IAAAC,OACAuD,IAAA3D,EAAAG,GAAA,IAAAC,OACAqF,OAAAzF,EAAAG,GAAA,IAAAC,OACA+B,kBAAAnC,EAAAG,GAAA,IAAAC,QAEA8E,QAAA,CACAnD,SAAA/B,EAAAG,GAAA,IAAAC,OACA4B,MAAAhC,EAAAG,GAAA,IAAAC,OACA+B,kBAAAnC,EAAAG,GAAA,IAAAC,OACA6B,WAAAjC,EAAAG,GAAA,IAAAC,kBAKG,UAAAf,EAAAU,KAAA,OAAAV,EAAAU,IAAA,CACHJ,EAAA,6BAEAsB,KAAA,SAAAC,EAAAC,GACA,IAAAnB,EAAAL,EAAAwB,GAAAN,KAAA,MACA2D,EAAAxE,EAAAa,KAAA,KACA0D,EAAA3C,MAAAN,KAAA,CACAmD,KAAAD,EAAArE,GAAA,GAAAC,OACAmB,IAAAvB,EAAAG,GAAA,GAAAC,OACAwE,IAAAJ,EAAArE,GAAA,GAAAC,OACAyE,KAAA7E,EAAAG,GAAA,GAAAC,OACAoF,OAAAhB,EAAArE,GAAA,GAAAC,OACA2E,MAAA,CACAW,UAAA,CACApD,QAAAtC,EAAAG,GAAA,GAAAC,OACAmC,WAAAvC,EAAAG,GAAA,GAAAC,OACA4B,MAAAhC,EAAAG,GAAA,IAAAC,OACAuF,oBAAA3F,EAAAG,GAAA,IAAAC,OACA6B,WAAAjC,EAAAG,GAAA,IAAAC,OACAuC,iBAAA3C,EAAAG,GAAA,IAAAC,OACAwC,iBAAA5C,EAAAG,GAAA,IAAAC,kBAKG,UAAAf,EAAAU,IAAA,CACHJ,EAAA,6BAEAsB,KAAA,SAAAC,EAAAC,GACA,IAAAnB,EAAAL,EAAAwB,GAAAN,KAAA,MACA2D,EAAAxE,EAAAa,KAAA,KACA0D,EAAA3C,MAAAN,KAAA,CACAmD,KAAAD,EAAArE,GAAA,GAAAC,OACAmB,IAAAvB,EAAAG,GAAA,GAAAC,OACAwE,IAAAJ,EAAArE,GAAA,GAAAC,OACAyE,KAAA,MAAA7E,EAAAG,GAAA,GAAAC,OACAoF,OAAAhB,EAAArE,GAAA,GAAAC,OACA2E,MAAA,CACAG,QAAA,CACAnD,SAAA/B,EAAAG,GAAA,GAAAC,OACA4B,MAAAhC,EAAAG,GAAA,GAAAC,OACA+B,kBAAAnC,EAAAG,GAAA,IAAAC,OACA6B,WAAAjC,EAAAG,GAAA,IAAAC,QAEAsF,UAAA,CACApD,QAAAtC,EAAAG,GAAA,IAAAC,OACAmC,WAAAvC,EAAAG,GAAA,IAAAC,OACA4B,MAAAhC,EAAAG,GAAA,IAAAC,OACAuF,oBAAA3F,EAAAG,GAAA,IAAAC,OACA6B,WAAAjC,EAAAG,GAAA,IAAAC,OACAuC,iBAAA3C,EAAAG,GAAA,IAAAC,OACAwC,iBAAA5C,EAAAG,GAAA,IAAAC,kBAKG,UAAAf,EAAAU,IAAA,CACHJ,EAAA,6BAEAsB,KAAA,SAAAC,EAAAC,GACA,IAAAnB,EAAAL,EAAAwB,GAAAN,KAAA,MACA2D,EAAAxE,EAAAa,KAAA,KACA0D,EAAA3C,MAAAN,KAAA,CACArB,KAAAZ,EAAAY,KACAF,IAAAV,EAAAU,IACA0E,KAAAD,EAAArE,GAAA,GAAAC,OACAmB,IAAAvB,EAAAG,GAAA,GAAAC,OACAwE,IAAAJ,EAAArE,GAAA,GAAAC,OACAyE,KAAA,MAAA7E,EAAAG,GAAA,GAAAC,OACAoF,OAAAhB,EAAArE,GAAA,GAAAC,OACA2E,MAAA,CACAI,QAAA,CACAd,aAAA,CACAN,KAAA/D,EAAAG,GAAA,GAAAC,OACA2B,SAAA/B,EAAAG,GAAA,GAAAC,QAEAgF,YAAA,CACArB,KAAA/D,EAAAG,GAAA,IAAAC,OACA2B,SAAA/B,EAAAG,GAAA,IAAAC,cAQA,OAAAmE,GAGAqB,EAAA,SAAA3F,GACA,IAAA4F,EAAA5F,EAAA6F,OAAAC,cAAArG,QAAA,UAAAA,QAAA,UAAAA,QAAA,OAAAsG,MAAA,KAEA,OADAH,IAAA/E,OAAA,GAAAmF,OAAA,IA4KAC,EAAAC,QAAA,CACAC,OArXA,WACA,WAAAC,QAAA,SAAAC,EAAAC,GACAvJ,EAAAwJ,IAjUA,gFAiUA,CACAC,QAAA,CACAC,OAAA,KAEKC,KAAA,SAAAC,GACL,IAAAC,EAlSA,SAAAvH,GACA,IAAAuH,EAAA,CACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,IAAA,GACAC,GAAA,GACAC,GAAA,IAEAxH,EAAAzC,EAAA0C,KAAAN,GAgEA,OA/DAK,EAAA,MAAAsB,KAAA,SAAAC,EAAAkG,GACA,IAAA1F,EAAA/B,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OAEA,SAAAsB,EACAmF,EAAAC,GAAAxF,KAAA,CACArB,KAAAN,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAL,IAAA2B,EACA2F,KAAA1H,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAoB,KAAA7B,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAkH,IAAA3H,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,cAEK,SAAAsB,EACLmF,EAAAG,GAAA1F,KAAA,CACArB,KAAAN,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAL,IAAA2B,EACA2F,KAAA1H,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAoB,KAAA7B,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAkH,IAAA3H,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,cAEK,SAAAsB,EAAA,CACL,IAAAzB,EAAA,KAGAA,EADA,eAAAN,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACA,kBAEAT,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OAGAyG,EAAAE,GAAAzF,KAAA,CACArB,OACAF,IAAA2B,EACA2F,KAAA1H,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAoB,KAAA7B,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAkH,IAAA3H,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,cAEK,SAAAsB,EACLmF,EAAAM,GAAA7F,KAAA,CACArB,KAAAN,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAL,IAAA2B,EACA2F,KAAA1H,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAoB,KAAA7B,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAkH,IAAA3H,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,cAEK,SAAAsB,EACLmF,EAAAK,GAAA5F,KAAA,CACArB,KAAAN,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAL,IAAA2B,EACA2F,KAAA1H,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAoB,KAAA7B,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAkH,IAAA3H,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,aAEK,WAAAsB,EASL,YARAmF,EAAAI,IAAA3F,KAAA,CACArB,KAAAN,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAL,IAAA2B,EACA2F,KAAA1H,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAoB,KAAA7B,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,OACAkH,IAAA3H,EAAAyH,GAAAvG,KAAA,MAAAV,GAAA,GAAAC,YAMAyG,EAyNAU,CAAAX,EAAAnH,MAEAoH,EACAP,EAAAO,GAEAN,EAAA,oDAEKiB,MAAA,SAAAC,GACLlB,EAAAkB,QAuWAC,eA3EA,SAAArI,GACA,IAAAsI,EAAA,6EACAnG,EAAArE,EAAAkC,EAAAmC,MACAoG,EAAA,GAAAC,OAAAF,EAAA,WAAAE,OAAArG,GACAsG,EAAAlC,EAAAvG,EAAAY,MAEA,cAAAZ,EAAAU,IACA,IAAAsG,QAAA,SAAAC,EAAAC,GACAvJ,EAAAwJ,IAAAoB,EAAA,CACAnB,QAAA,CACAC,OAAA,KAEOC,KAAA,SAAAoB,GACP,IACA3G,EADAlE,EAAA0C,KAAAmI,EAAAtI,KACAE,CAAA,yBAAAQ,GAAA,GAAAL,KAAA,QACAkI,EAAA,GAAAH,OAAAF,GAAAE,OAAAzG,GACApE,EAAAwJ,IAAAwB,EAAA,CACAvB,QAAA,CACAC,OAAA,KAESC,KAAA,SAAAoB,GACTzB,EAAAlH,EAAAC,EAAA0I,EAAAtI,SACS+H,MAAA,SAAAC,GACTQ,QAAAC,IAAAT,OAEOD,MAAA,SAAAC,GACPQ,QAAAC,IAAAT,OAKA,IAAApB,QAAA,SAAAC,EAAAC,GACA,IAAA4B,EAAA,GAAAN,OAAAF,EAAA,aAAAE,OAAAC,GACA9K,EAAAwJ,IAAA2B,EAAA,CACA1B,QAAA,CACAC,OAAA,KAEKC,KAAA,SAAAoB,GACL,IAAAK,EAAAlL,EAAA0C,KAAAmI,EAAAtI,MACA2I,EAAA,oBAAAnH,KAAA,SAAAC,EAAAC,GACA,IAAAqD,EAAA4D,EAAAjH,GAAAN,KAAA,KAAAV,GAAA,GACAkI,EAAAD,EAAAjH,GAAA7B,OACAS,EAAAV,EAAAU,IASA,GAPA,OAAAV,EAAAU,MACAA,EAAA,KAGAyE,EAAApE,OAAAkI,cAAA5I,QAAA,UAAAA,QAAA,UAAAA,QAAA,UAAAA,QAAA,UACAL,EAAAY,KAAAqI,cAAA5I,QAAA,UAAAA,QAAA,UAAAA,QAAA,UAAAA,QAAA,UAEA,GAAA2I,EAAAE,OAAAxI,GAAA,CACA,IAAAyI,EAAAhE,EAAA1E,KAAA,QACA2I,EAAA,GAAAZ,OAAAF,GAAAE,OAAAW,GACAxL,EAAAwJ,IAAAiC,EAAA,CACAhC,QAAA,CACAC,OAAA,KAEWC,KAAA,SAAAoB,GACXzB,EAAAlH,EAAAC,EAAA0I,EAAAtI,SACW+H,MAAA,SAAAC,GACXlB,EAAAkB,OAGO,WACPlB,EAAA,0CAEKiB,MAAA,SAAAC,GACLlB,EAAAkB,QAQAiB,kBA3KA,SAAArJ,GACA,IAAAsI,EAAA,6EACAnG,EAAArE,EAAAkC,EAAAmC,MACAoG,EAAA,GAAAC,OAAAF,EAAA,WAAAE,OAAArG,GACAsG,EAAAlC,EAAAvG,EAAAY,MAEA,cAAAZ,EAAAU,IACA,IAAAsG,QAAA,SAAAC,EAAAC,GACAvJ,EAAAwJ,IAAAoB,EAAA,CACAnB,QAAA,CACAC,OAAA,KAEOC,KAAA,SAAAoB,GACP,IACA3G,EADAlE,EAAA0C,KAAAmI,EAAAtI,KACAE,CAAA,yBAAAQ,GAAA,GAAAL,KAAA,QACAkI,EAAA,GAAAH,OAAAF,GAAAE,OAAAzG,GACApE,EAAAwJ,IAAAwB,EAAA,CACAvB,QAAA,CACAC,OAAA,KAESC,KAAA,SAAAoB,GACT,IACAY,EADAzL,EAAA0C,KAAAmI,EAAAtI,KACAmJ,CAAA,sBAAAzI,GAAA,GAAAL,KAAA,QACA9C,EAAAwJ,IAAA,GAAAqB,OAAAF,GAAAE,OAAAc,GAAA,CACAlC,QAAA,CACAC,OAAA,KAEWC,KAAA,SAAAoB,GACXzB,EAAAhC,EAAAjF,EAAA0I,EAAAtI,SACW+H,MAAA,SAAAC,GACXlB,EAAAkB,OAESD,MAAA,SAAAC,GACTlB,EAAAkB,OAEOD,MAAA,SAAAC,GACPlB,EAAAkB,OAKA,IAAApB,QAAA,SAAAC,EAAAC,GACA,IAAA4B,EAAA,GAAAN,OAAAF,EAAA,aAAAE,OAAAC,GACA9K,EAAAwJ,IAAA2B,EAAA,CACA1B,QAAA,CACAC,OAAA,KAEKC,KAAA,SAAAoB,GACL,IAAAK,EAAAlL,EAAA0C,KAAAmI,EAAAtI,MACA2I,EAAA,oBAAAnH,KAAA,SAAAC,EAAAC,GACA,IAAAqD,EAAA4D,EAAAjH,GAAAN,KAAA,KAAAV,GAAA,GACAkI,EAAAD,EAAAjH,GAAA7B,OACAS,EAAAV,EAAAU,IASA,GAPA,OAAAV,EAAAU,MACAA,EAAA,KAGAyE,EAAApE,OAAAkI,cAAA5I,QAAA,UAAAA,QAAA,UAAAA,QAAA,UAAAA,QAAA,UACAL,EAAAY,KAAAqI,cAAA5I,QAAA,UAAAA,QAAA,UAAAA,QAAA,UAAAA,QAAA,UAEA,GAAA2I,EAAAE,OAAAxI,GAAA,CACA,IAAAyI,EAAAhE,EAAA1E,KAAA,QACA2I,EAAA,GAAAZ,OAAAF,GAAAE,OAAAW,GACAxL,EAAAwJ,IAAAiC,EAAA,CACAhC,QAAA,CACAC,OAAA,KAEWC,KAAA,SAAAoB,GACX,IAEAc,EAFA3L,EAAA0C,KAAAmI,EAAAtI,KACAqJ,CAAA,4BAAA3I,GAAA,GACAU,KAAA,KAAAkI,OAAAjJ,KAAA,QACAkJ,EAAA,GAAAnB,OAAAF,GAAAE,OAAAgB,GACA7L,EAAAwJ,IAAAwC,EAAA,CACAvC,QAAA,CACAC,OAAA,KAEaC,KAAA,SAAAoB,GACbzB,EAAAhC,EAAAjF,EAAA0I,EAAAtI,SACa+H,MAAA,SAAAC,GACblB,EAAAkB,OAEWD,MAAA,SAAAC,GACXlB,EAAAkB,OAGO,WACPlB,EAAA,0CAEKiB,MAAA,SAAAC,GACLlB,EAAAkB,oECzmBAvB,EAAAC,QAAiBlJ,EAAAgM,EAAuB,kTCsJzBC,sBA/Id,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAiBPQ,KAAO,SAACC,EAAOC,EAASC,EAAQC,GAC/B,MAAO,CACFC,QAAS,SAACC,EAAGC,GAMW,SAAlBJ,EAAOK,QACVf,EAAKD,MAAMiB,YAAYP,EAAQQ,SAASpK,KAAM4J,EAAQQ,SAAS7I,KAAM4H,EAAKD,MAAMpJ,KAE7EmK,GACFA,OA9BSd,EAqCnBkB,MAAQ,SAACV,EAAOC,EAASC,EAAQC,GAC7B,OAAIF,GAAWT,EAAKD,MAAMoB,QAAQV,EAAQQ,SAASpK,MAC3C,CACN+J,QAAS,SAACC,EAAGC,GAORA,GACAA,KAGLM,MAAO,CACNC,WAAY,eAGJZ,GAAWT,EAAKD,MAAMuB,OAAOb,EAAQQ,SAASpK,MACjD,CACN+J,QAAS,SAACC,EAAGC,GAORA,GACAA,KAGLM,MAAO,CACNC,WAAY,QAIP,CACNT,QAAS,SAACC,EAAGC,GAORA,GACAA,KAGLM,MAAO,CACNC,WAAY,WApFlBrB,EAAKuB,cAAgBvB,EAAKuB,cAAcC,KAAnBvB,OAAAwB,EAAA,EAAAxB,CAAAD,IACrBA,EAAK0B,aAAe1B,EAAK0B,aAAaF,KAAlBvB,OAAAwB,EAAA,EAAAxB,CAAAD,IAHFA,4EAMNnJ,GACPsJ,KAAKJ,MAAMoB,QAAQtK,IACvBsJ,KAAKJ,MAAM4B,WAAW9K,yCAIVA,EAAMF,EAAKyB,EAAM8F,GACzBiC,KAAKJ,MAAMuB,OAAOzK,IACtBsJ,KAAKJ,MAAM6B,YAAY/K,EAAMF,EAAKyB,EAAM8F,oCA8EjC,IAAA2D,EAAA1B,KACJ9J,EAAO,GACO8J,KAAKJ,MAAhBtC,QACCqE,QAAQ,SAAC7L,GAChBI,EAAK6B,KAAK,CACTrB,KAAMZ,EAAOY,KACbuB,KAAMnC,EAAOmC,KACb8F,IAAKjI,EAAOiI,QAGd,IAAM6D,EAAU,CAChB,CACCC,GAAI,SACJC,SAAU,GACVlB,OAAQ,SACRmB,KAAM,SAAAC,GAAkB,IAAflB,EAAekB,EAAflB,SACR,OACCmB,EAAAhH,EAAAiH,cAACC,EAAA,EAAD,CACCC,SAA8C,IAArCV,EAAK9B,MAAMuB,OAAOL,EAASpK,MACpC2L,SAAU,kBAAMX,EAAKH,aAAaT,EAASpK,OAC3C4L,MAAM,cAIP,CACFT,GAAI,UACJC,SAAU,GACVlB,OAAQ,UACRmB,KAAM,SAAAQ,GAAkB,IAAfzB,EAAeyB,EAAfzB,SACR,OACCmB,EAAAhH,EAAAiH,cAACC,EAAA,EAAD,CACCC,SAA+C,IAAtCV,EAAK9B,MAAMoB,QAAQF,EAASpK,MACrC2L,SAAU,kBAAMX,EAAKN,cAAcN,EAASpK,KAAMgL,EAAK9B,MAAMpJ,IAAKsK,EAAS7I,KAAM6I,EAAS/C,MAC1FuE,MAAM,cAIP,CACF1B,OAAQ,OACRkB,SAAU,QACR,CACFlB,OAAQ,OACRkB,SAAU,QACR,CACFlB,OAAQ,MACRkB,SAAU,QAGX,OAAOG,EAAAhH,EAAAiH,cAACM,EAAA,EAAD,CAAYtM,KAAMA,EAAM0L,QAASA,EAASa,WAAYzC,KAAKe,MAAO2B,WAAY1C,KAAKI,cA9IlEuC,+FCsCXC,qLAjCHlM,EAAMmM,EAAUC,EAAKC,EAAOC,GACrC,MAAO,CAAEtM,OAAMmM,WAAUC,MAAKC,QAAOC,4CAItC,OACCf,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,KACAhB,EAAAhH,EAAAiH,cAACgB,EAAA,EAAD,KACCjB,EAAAhH,EAAAiH,cAACiB,EAAA,EAAD,KACQlB,EAAAhH,EAAAiH,cAACkB,EAAA,EAAD,KACEnB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,aACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,YACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,YACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,eAGHpB,EAAAhH,EAAAiH,cAACoB,EAAA,EAAD,KACEtD,KAAKJ,MAAM2D,eAAeC,IAAI,SAAA/M,GAAG,OAChCwL,EAAAhH,EAAAiH,cAACkB,EAAA,EAAD,CAAUK,IAAKhN,EAAIC,MACjBuL,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KACG5M,EAAIC,MAEPuL,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,CAAWK,MAAM,SAASjN,EAAID,KAC9ByL,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,CAAWK,MAAM,SAASjN,EAAIsH,KAC9BkE,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,CAAWK,MAAM,SAASjN,EAAIwB,mBA1BjB0K,iECWvBgB,EAASC,EAAQ,KAy2BRC,cAn2Bd,SAAAA,EAAYjE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,IAClBhE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,KAAAH,KAAMJ,KACDS,MAAQ,CACZhJ,KAAM,KACN2D,KAAM,MAJW6E,+EAQH,IAAA6B,EAAA1B,KACmB,MAA9BA,KAAKJ,MAAMkE,WAAWpN,OACzBgI,QAAQC,IAAIqB,KAAKJ,MAAMkE,YACvBhH,QAAQiH,IAAI,CAACJ,EAAOxF,eAAe6B,KAAKJ,MAAMkE,YAAaH,EAAOxE,kBAAkBa,KAAKJ,MAAMkE,cAC9F1G,KAAK,SAAAoB,GACLkD,EAAKsC,SAAS,CAAC3M,KAAMmH,EAAI,GAAIxD,KAAMwD,EAAI,KACvCE,QAAQC,IAAIH,EAAI,IAChBE,QAAQC,IAAIH,EAAI,MAEhBP,MAAM,SAAAC,GACNQ,QAAQC,IAAIT,uCAKN,IAAA+F,EAAAjE,KAOR,GAAuB,MAAnBA,KAAKK,MAAMhJ,MAAgB2I,KAAKK,MAAMhJ,KAAKX,MAAQsJ,KAAKJ,MAAMkE,WAAWpN,KAAM,CAClF,IAAIc,EAAS,GACT0M,EAAM,EAOV,MANiC,OAA7BlE,KAAKJ,MAAMkE,WAAWtN,MACrBwJ,KAAKK,MAAMhJ,KAAKF,GAAGK,SACtBA,EAASwI,KAAKK,MAAMhJ,KAAKF,GAAGK,QAE7B0M,EAAMlE,KAAKK,MAAMhJ,KAAKD,OAAOG,OAAS,GAGtC0K,EAAAhH,EAAAiH,cAAA,WACCD,EAAAhH,EAAAiH,cAACiC,EAAA,EAAD,CAAQC,KAAMpE,KAAKJ,MAAMwE,KAAMC,QAASrE,KAAKJ,MAAMyE,QAASC,SAAU,KAAMC,WAAW,GACnFtC,EAAAhH,EAAAiH,cAACsC,EAAA,EAAD,CAAa3C,GAAG,sBAAsB7B,KAAKK,MAAMhJ,KAAKX,MACtDuL,EAAAhH,EAAAiH,cAACuC,EAAA,EAAD,CAAKC,EAAG,GACVzC,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,KACIhB,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACd7C,EAAAhH,EAAAiH,cAAC6C,EAAA,EAAD,CAAQC,IAAKhF,KAAKK,MAAMhJ,KAAKX,KAAMuO,IAAKjF,KAAKK,MAAMhJ,KAAKf,QAAS2K,MAAO,CAACiE,OAAO,GAAGC,MAAM,GAAGC,OAAO,OAEpGnD,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACd7C,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,KACChB,EAAAhH,EAAAiH,cAAA,0BACAD,EAAAhH,EAAAiH,cAACgB,EAAA,EAAD,KACCjB,EAAAhH,EAAAiH,cAACiB,EAAA,EAAD,KAEoC,OAA9Bc,EAAKrE,MAAMkE,WAAWtN,KAA8C,OAA9ByN,EAAKrE,MAAMkE,WAAWtN,KAA6C,MAA7ByN,EAAKrE,MAAMkE,WAAWtN,IAEvGyL,EAAAhH,EAAAiH,cAACkB,EAAA,EAAD,KACInB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,cACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,gBACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,YACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,uBAGsC,OAA9BY,EAAKrE,MAAMkE,WAAWtN,IAE/ByL,EAAAhH,EAAAiH,cAACkB,EAAA,EAAD,KACCnB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,uBACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,mBACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,sBACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,aAGsC,OAA9BY,EAAKrE,MAAMkE,WAAWtN,IAE/ByL,EAAAhH,EAAAiH,cAACkB,EAAA,EAAD,KACCnB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,uBACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,oBAGsC,QAA9BY,EAAKrE,MAAMkE,WAAWtN,IAElCyL,EAAAhH,EAAAiH,cAACkB,EAAA,EAAD,KACInB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,sBACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,iBACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,cACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,uBACApB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,sBAPI,GAcTpB,EAAAhH,EAAAiH,cAACoB,EAAA,EAAD,KAEoC,OAA9BW,EAAKrE,MAAMkE,WAAWtN,KAA8C,OAA9ByN,EAAKrE,MAAMkE,WAAWtN,KAA6C,MAA7ByN,EAAKrE,MAAMkE,WAAWtN,IAEpGyL,EAAAhH,EAAAiH,cAACkB,EAAA,EAAD,KACCnB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK5K,QAAQG,WAChDwI,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAKvK,SACxCsI,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK5K,QAAQI,kBAChDuI,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK5L,gBAGF,OAA9B2L,EAAKrE,MAAMkE,WAAWtN,IAE/ByL,EAAAhH,EAAAiH,cAACkB,EAAA,EAAD,KACCnB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK3L,OAAO,GAAGE,OAClDwJ,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK3L,OAAO,GAAGG,YAClDuJ,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK3L,OAAO,GAAG5B,eAClDsL,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK3L,OAAO,GAAG6B,MAGZ,OAA9B6J,EAAKrE,MAAMkE,WAAWtN,IAE/ByL,EAAAhH,EAAAiH,cAACkB,EAAA,EAAD,KACCnB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAKrJ,MAAMrC,UAC9CyJ,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAKrJ,MAAML,OAGR,QAA9ByJ,EAAKrE,MAAMkE,WAAWtN,IAE/ByL,EAAAhH,EAAAiH,cAACkB,EAAA,EAAD,KACCnB,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKV,eAC5BsL,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKP,UAC5BmL,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKN,OAC5BkL,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKL,gBAC5BiL,EAAAhH,EAAAiH,cAACmB,EAAA,EAAD,KAAYY,EAAK5D,MAAMhJ,KAAKJ,eAPxB,OAkBbgL,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAEE,IAAVtN,EAEFyK,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,gBACUzL,GAKVyK,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,kBASD,WACF,GAAkC,OAA9BgB,EAAKrE,MAAMkE,WAAWtN,IAAc,CACvC,IAAI6O,EAAa,GACbC,EAAc,GACdC,EAAmB,GACnBC,EAAgB,GAChBC,EAAqB,GACzBxB,EAAK5D,MAAMhJ,KAAKD,OAAOuK,QAAQ,SAAA9J,GAC9BwN,EAAWtN,KAAKF,EAAKK,QACrBoN,EAAYvN,KAAK2N,WAAW7N,EAAKU,OAAO,GAAGG,aAC3C6M,EAAiBxN,KAAK2N,WAAW7N,EAAKU,OAAO,GAAGG,aAChD8M,EAAczN,KAAK2N,WAAW7N,EAAKU,OAAO,GAAGE,QAC7CgN,EAAmB1N,KAAK2N,WAAW7N,EAAKU,OAAO,GAAGE,UAEnD,IAAIkN,EAAa,GACbC,EAAiB,GACjBC,EAAsB,GACtBC,EAAwB,GACxBC,EAAmB,GACvB9B,EAAK5D,MAAMrF,KAAK3C,MAAMsJ,QAAQ,SAAAqE,GAC7BL,EAAW5N,KAAKiO,EAAK3K,KACrBuK,EAAe7N,KAAK2N,WAAWM,EAAKxK,MAAMG,QAAQjD,aAClDmN,EAAoB9N,KAAK2N,WAAWM,EAAKxK,MAAMW,UAAUzD,aACzDoN,EAAsB/N,KAAK2N,WAAWM,EAAKxK,MAAMW,UAAU1D,QAC3DsN,EAAiBhO,KAAK2N,WAAWM,EAAKxK,MAAMG,QAAQlD,UAErD,IAAMwN,EAAa,CAClBC,OAAQb,EACRc,SAAU,CAAC,CACVC,MAAO,qBACPC,gBAAiB,uBACdC,YAAa,qBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAMoP,GACJ,CACFc,MAAO,uBACPC,gBAAiB,uBACfC,YAAa,qBACZC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAMqP,KAGFmB,EAAe,CACpBR,OAAQb,EACRc,SAAU,CAAC,CACVC,MAAO,gBACPC,gBAAiB,uBACdC,YAAa,qBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAMsP,GACJ,CACFY,MAAO,kBACPC,gBAAiB,uBACfC,YAAa,qBACZC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAMuP,KAGFkB,EAAa,CAClBT,OAAQP,EACRQ,SAAU,CAAC,CACVC,MAAO,qBACPC,gBAAiB,uBACdC,YAAa,qBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAM0P,GACJ,CACFQ,MAAO,uBACPC,gBAAiB,uBACfC,YAAa,qBACZC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAM2P,KAGFe,EAAe,CACpBV,OAAQP,EACRQ,SAAU,CAAC,CACVC,MAAO,gBACPC,gBAAiB,uBACdC,YAAa,qBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAM6P,GACJ,CACFK,MAAO,kBACPC,gBAAiB,uBACfC,YAAa,qBACZC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAM4P,KAGR,OACC7D,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAAA,0BACAD,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAK5Q,KAAM+P,KAEZhE,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAK5Q,KAAMwQ,MAGbzE,EAAAhH,EAAAiH,cAAA,UAAK+B,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAKhM,OAAjC,mBACA+J,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAK5Q,KAAMyQ,KAEZ1E,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAK5Q,KAAM0Q,OAKT,GAAkC,OAA9B3C,EAAKrE,MAAMkE,WAAWtN,KAA8C,OAA9ByN,EAAKrE,MAAMkE,WAAWtN,IAAc,CACpF,IAAI6O,EAAa,GACbE,EAAmB,GACnBE,EAAqB,GACzBxB,EAAK5D,MAAMhJ,KAAKD,OAAOuK,QAAQ,SAAA9J,GAC9BwN,EAAWtN,KAAKF,EAAKK,QACrBqN,EAAiBxN,KAAK2N,WAAW7N,EAAKU,OAAO,GAAGG,aAChD+M,EAAmB1N,KAAK2N,WAAW7N,EAAKU,OAAO,GAAGE,UAEnD,IAAIkN,EAAa,GACbE,EAAsB,GACtBC,EAAwB,GAC5B7B,EAAK5D,MAAMrF,KAAK3C,MAAMsJ,QAAQ,SAAAqE,GAC7BL,EAAW5N,KAAKiO,EAAK3K,KACrBwK,EAAoB9N,KAAK2N,WAAWM,EAAKxK,MAAMW,UAAUzD,aACzDoN,EAAsB/N,KAAK2N,WAAWM,EAAKxK,MAAMW,UAAU1D,UAE5D,IAAMwN,EAAa,CAClBC,OAAQb,EACRc,SAAU,CAAC,CACVC,MAAO,uBACPW,MAAM,EACHC,YAAa,GACbX,gBAAiB,UACjBC,YAAa,UACbW,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GACnB3R,KAAMqP,KAGFmB,EAAe,CACpBR,OAAQb,EACRc,SAAU,CAAC,CACVC,MAAO,kBACPW,MAAM,EACHC,YAAa,GACbX,gBAAiB,UACjBC,YAAa,UACbW,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GACnB3R,KAAMuP,KAGFkB,EAAa,CAClBT,OAAQP,EACRQ,SAAU,CAAC,CACVC,MAAO,uBACPW,MAAM,EACHC,YAAa,GACbX,gBAAiB,UACjBC,YAAa,UACbW,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GACnB3R,KAAM2P,KAGFe,EAAe,CACpBV,OAAQP,EACRQ,SAAU,CAAC,CACVC,MAAO,kBACPW,MAAM,EACHC,YAAa,GACbX,gBAAiB,UACjBC,YAAa,UACbW,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GACnB3R,KAAM4P,KAGR,OACC7D,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAAA,0BACAD,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAM5Q,KAAM+P,KAEbhE,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAM5Q,KAAMwQ,MAGdzE,EAAAhH,EAAAiH,cAAA,UAAK+B,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAKhM,OAAjC,mBACA+J,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACjB3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACX5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAM5Q,KAAMyQ,KAEb1E,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAM5Q,KAAM0Q,OAKV,GAAkC,OAA9B3C,EAAKrE,MAAMkE,WAAWtN,IAAc,CACjD,IAAI6O,EAAa,GACVyC,EAAiB,GACjBC,EAAmB,GACvB9D,EAAK5D,MAAMhJ,KAAKD,OAAOuK,QAAQ,SAAA9J,GAC9BwN,EAAWtN,KAAKF,EAAKK,QACrB4P,EAAe/P,KAAK2N,WAAW7N,EAAKU,OAAO,GAAGG,aAC9CqP,EAAiBhQ,KAAK2N,WAAW7N,EAAKU,OAAO,GAAGE,UAEjD,IAAIkN,EAAa,GACbqC,EAAiB,GACjBpC,EAAiB,GACjBqC,EAAmB,GACnBlC,EAAmB,GACnBmC,EAAe,GACfC,EAAa,GACbC,EAAgB,GACpBnE,EAAK5D,MAAMrF,KAAK3C,MAAMsJ,QAAQ,SAAAqE,GAC7BL,EAAW5N,KAAKiO,EAAK3K,KACrBuK,EAAe7N,KAAK2N,WAAWM,EAAKxK,MAAMG,QAAQjD,aAClDsP,EAAejQ,KAAK2N,WAAWM,EAAKxK,MAAME,QAAQhD,aAClDuP,EAAiBlQ,KAAK2N,WAAWM,EAAKxK,MAAME,QAAQjD,QACpDsN,EAAiBhO,KAAK2N,WAAW2C,KAAKC,IAAItC,EAAKxK,MAAMG,QAAQlD,SAC7DyP,EAAanQ,KAAK2N,WAAWM,EAAKxK,MAAME,QAAQ/E,gBAChDwR,EAAWpQ,KAAK2N,WAAWM,EAAKxK,MAAME,QAAQtB,MAC9CgO,EAAcrQ,KAAK2N,WAAWM,EAAKxK,MAAME,QAAQQ,WAElD,IAAM+J,EAAa,CAClBC,OAAQb,EACRc,SAAU,CAAC,CACVC,MAAO,qBACPW,MAAM,EACHC,YAAa,GACbX,gBAAiB,uBACjBC,YAAa,qBACbW,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GACnB3R,KAAM4R,KAGFpB,EAAe,CACpBR,OAAQb,EACRc,SAAU,CAAC,CACVC,MAAO,gBACPW,MAAM,EACHC,YAAa,GACbX,gBAAiB,uBACjBC,YAAa,qBACbW,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GACnB3R,KAAM6R,KAGFQ,EAAc,CACnBrC,OAAQP,EACRQ,SAAU,CAAC,CACVC,MAAO,MACPW,MAAM,EACHC,YAAa,GACbX,gBAAiB,uBACjBC,YAAa,qBACbW,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GACnB3R,KAAMiS,KAGFK,EAAmB,CACxBtC,OAAQP,EACRQ,SAAU,CAAC,CACVC,MAAO,eACPC,gBAAiB,uBACdC,YAAa,qBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAMkS,GACJ,CACFhC,MAAO,eACPC,gBAAiB,uBACfC,YAAa,qBACZC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAMgS,KAGFvB,EAAa,CAClBT,OAAQP,EACRQ,SAAU,CAAC,CACVC,MAAO,qBACPC,gBAAiB,uBACdC,YAAa,qBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAM0P,GACJ,CACFQ,MAAO,qBACPC,gBAAiB,uBACfC,YAAa,qBACZC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAM8R,KAGFpB,EAAe,CACpBV,OAAQP,EACRQ,SAAU,CAAC,CACVC,MAAO,gBACPC,gBAAiB,uBACdC,YAAa,qBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAM6P,GACJ,CACFK,MAAO,gBACPC,gBAAiB,uBACfC,YAAa,qBACZC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAM+R,KAGR,OACChG,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAAA,0BACAD,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAM5Q,KAAM+P,KAEbhE,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAM5Q,KAAMwQ,MAGdzE,EAAAhH,EAAAiH,cAAA,UAAK+B,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAKhM,OAAjC,mBACA+J,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACjB3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACX5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAK5Q,KAAMyQ,KAEZ1E,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAK5Q,KAAM0Q,MAGb3E,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACjB3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACX5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAK5Q,KAAMsS,KAEZvG,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAM5Q,KAAMqS,OAKV,GAAkC,OAA9BtE,EAAKrE,MAAMkE,WAAWtN,IAAc,CAC9C,IAAIiS,EAAQ,GACRC,EAAQ,GACRC,EAAW,GACXC,EAAW,GACXC,EAAW,GACXC,EAAU,GAEVC,EAAiBrD,WAAWzB,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAvB,aAA4C1L,UACxEwQ,EAAYtD,WAAWzB,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAvB,aAA4C1J,MACnEyO,GAAiBvD,WAAWzB,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK,QAAQ1L,UAChE0Q,GAAYxD,WAAWzB,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK,QAAQ1J,MAC3D2O,GAAoBzD,WAAWzB,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK,SAAS1L,UACpE4Q,GAAe1D,WAAWzB,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK,SAAS1J,MAC/D6O,GAAoB3D,WAAWzB,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK,SAAS1L,UACpE8Q,GAAe5D,WAAWzB,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK,SAAS1J,MAC/D+O,GAAoB7D,WAAWzB,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK,SAAS1L,UACpEgR,GAAe9D,WAAWzB,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK,SAAS1J,MAC/DiP,GAAmB/D,WAAWzB,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK,OAAO1L,UACjEkR,GAAchE,WAAWzB,EAAK5D,MAAMhJ,KAAKD,OAAO8M,GAAK,OAAO1J,MAEhEiO,EAAM1Q,KAAKgR,EAAiBC,GAC5BP,EAAM1Q,KAAKiR,GACXN,EAAM3Q,KAAKkR,GAAiBC,IAC5BR,EAAM3Q,KAAKmR,IACXP,EAAS5Q,KAAKoR,GAAoBC,IAClCT,EAAS5Q,KAAKqR,IACdR,EAAS7Q,KAAKsR,GAAoBC,IAClCV,EAAS7Q,KAAKuR,IACdT,EAAS9Q,KAAKwR,GAAoBC,IAClCX,EAAS9Q,KAAKyR,IACdV,EAAQ/Q,KAAK0R,GAAmBC,IAChCZ,EAAQ/Q,KAAK2R,IACb,IAAMC,GAAY,CACpBzD,OAAQ,CAAC,sBAAuB,qBAChCC,SAAU,CAAC,CACVjQ,KAAMuS,EACNpC,gBAAiB,CACjB,OACA,WAEAG,qBAAsB,CACtB,OACA,cAIIoD,GAAW,CAChB1D,OAAQ,CAAC,cAAe,aACxBC,SAAU,CAAC,CACVjQ,KAAMwS,EACNrC,gBAAiB,CACjB,OACA,WAEAG,qBAAsB,CACtB,OACA,cAIIqD,GAAe,CACpB3D,OAAQ,CAAC,eAAgB,cACzBC,SAAU,CAAC,CACVjQ,KAAMyS,EACNtC,gBAAiB,CACjB,OACA,QAEAG,qBAAsB,CACtB,OACA,WAIIsD,GAAe,CACpB5D,OAAQ,CAAC,eAAgB,cACzBC,SAAU,CAAC,CACVjQ,KAAM0S,EACNvC,gBAAiB,CACjB,OACA,WAEAG,qBAAsB,CACtB,OACA,cAIIuD,GAAe,CACpB7D,OAAQ,CAAC,eAAgB,cACzBC,SAAU,CAAC,CACVjQ,KAAM2S,EACNxC,gBAAiB,CACjB,OACA,WAEAG,qBAAsB,CACtB,OACA,cAIIwD,GAAc,CACnB9D,OAAQ,CAAC,aAAc,YACvBC,SAAU,CAAC,CACVjQ,KAAM4S,EACNzC,gBAAiB,CACjB,OACA,WAEAG,qBAAsB,CACtB,OACA,cAIF,OACCvE,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACX3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAU5Q,KAAMyT,MAEjB1H,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAU5Q,KAAM0T,OAGlB3H,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAU5Q,KAAM2T,MAEjB5H,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAU5Q,KAAM4T,OAGlB7H,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAU5Q,KAAM6T,MAEjB9H,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAU5Q,KAAM8T,QAKd,GAAkC,QAA9B/F,EAAKrE,MAAMkE,WAAWtN,IAAe,CAC/C,IAAImP,GAAa,GACbsE,GAAgB,GAChBlT,GAAQ,GACRmT,GAAQ,GACZjG,EAAK5D,MAAMrF,KAAK3C,MAAMsJ,QAAQ,SAAAqE,GAC7BL,GAAW5N,KAAKiO,EAAK3K,KACrB4O,GAAclS,KAAK2N,WAAWM,EAAKzK,iBACnCxE,GAAMgB,KAAK2N,WAAWM,EAAKjP,QAC3BmT,GAAMnS,KAAK2N,WAAWM,EAAKrP,kBAE5B,IAAMwT,GAAmB,CACxBjE,OAAQP,GACRQ,SAAU,CAAC,CACVC,MAAO,gBACPC,gBAAiB,uBACdC,YAAa,qBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAMgU,IACJ,CACF9D,MAAO,QACPC,gBAAiB,uBACfC,YAAa,qBACZC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBACrBvQ,KAAMa,MA4BFqT,GAAoB,CACzBlE,OAAQP,GACRQ,SAAU,CAAG,CACZC,MAAO,iBACLC,gBAAiB,wBACjBC,YAAa,sBACbgB,qBAAsB,sBACtBD,iBAAkB,OAClBI,0BAA2B,OAC3BC,sBAAuB,sBACvBxR,KAAM+T,MAKV,OACChI,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAAA,iCACAD,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACjB3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACX5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAK5Q,KAAMiU,MAEZlI,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACgC,GAAI,GACd5E,EAAAhH,EAAAiH,cAAC4E,EAAA,EAAD,CAAO5Q,KAAMkU,SApqBhB,OAqrBb,OAHkC,MAA9BpK,KAAKJ,MAAMkE,WAAWpN,MACzBsJ,KAAKqK,gBAGLpI,EAAAhH,EAAAiH,cAAA,WACCD,EAAAhH,EAAAiH,cAACiC,EAAA,EAAD,CAAQC,KAAMpE,KAAKJ,MAAMwE,KAAMC,QAASrE,KAAKJ,MAAMyE,SAC/CpC,EAAAhH,EAAAiH,cAACsC,EAAA,EAAD,CAAa3C,GAAG,sBAAhB,gBACAI,EAAAhH,EAAAiH,cAACoI,EAAA,EAAD,KACErI,EAAAhH,EAAAiH,cAACqI,EAAA,EAAD,gBA31BmB5H,aCbxBgB,EAASC,EAAQ,KA2MR4G,cAvMd,SAAAA,EAAY5K,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwK,IAClB3K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0K,GAAArK,KAAAH,KAAMJ,KACDS,MAAQ,CACZ/C,QAAS,CACRC,GAAI,GACJC,GAAI,GACJI,GAAI,GACJD,GAAI,GACJF,GAAI,GACJC,IAAK,IAENsD,QAAS,GACTuC,eAAgB,GAChBpC,OAAQ,GACR2C,WAAY,CACXM,MAAM,EACN1N,KAAM,KACNuB,KAAM,OAIR0L,EAAO9G,SACNO,KAAK,SAAAoB,GACL,IAAIiM,EAAa,CAChBlN,GAAIiB,EAAIjB,GACRC,GAAIgB,EAAIhB,GACRI,GAAIY,EAAIZ,GACRD,GAAIa,EAAIb,GACRF,GAAIe,EAAIf,GACRC,IAAKc,EAAId,KAEVmC,EAAKmE,SAAS,CAAC1G,QAASmN,MAExBxM,MAAM,SAAAC,GACNQ,QAAQC,IAAIT,KAGb2B,EAAK6K,YAAc7K,EAAK6K,YAAYrJ,KAAjBvB,OAAAwB,EAAA,EAAAxB,CAAAD,IACnBA,EAAK8K,WAAa9K,EAAK8K,WAAWtJ,KAAhBvB,OAAAwB,EAAA,EAAAxB,CAAAD,IAClBA,EAAK+K,kBAAoB/K,EAAK+K,kBAAkBvJ,KAAvBvB,OAAAwB,EAAA,EAAAxB,CAAAD,IACzBA,EAAKgL,gBAAkBhL,EAAKgL,gBAAgBxJ,KAArBvB,OAAAwB,EAAA,EAAAxB,CAAAD,IAxCLA,iFA2CDnJ,EAAMuB,EAAMzB,GAC7BwJ,KAAKgE,SAAS,CAACF,WAAY,CAACM,MAAM,EAAM1N,KAAMA,EAAMuB,KAAMA,EAAMzB,IAAKA,+CAIrEwJ,KAAKgE,SAAS,CAACF,WAAY,CAACM,MAAM,EAAO1N,KAAM,KAAMuB,KAAM,4CAGhDvB,EAAMF,EAAKyB,EAAM8F,GAC5B,IAAKiC,KAAKK,MAAMc,OAAOzK,GAAO,CAC7B,IAAMoU,EAAchL,OAAOiL,OAAO,GAAI/K,KAAKK,MAAMW,SAC3CgK,EAAYlL,OAAAmL,EAAA,EAAAnL,CAAOE,KAAKK,MAAMkD,gBAEpC,GADAuH,EAAYpU,IAASsJ,KAAKK,MAAMW,QAAQtK,GACpCoU,EAAYpU,GACfsU,EAAajT,KAAK,CACjBrB,KAAMA,EACNF,IAAKA,EACLyB,KAAMA,EACN8F,IAAKA,SAGN,IAAK,IAAIpG,EAAI,EAAGA,EAAIqT,EAAazT,OAAQI,IACpCqT,EAAarT,GAAGjB,OAASA,GAC5BsU,EAAaE,OAAOvT,EAAG,GAI1BqI,KAAKgE,SAAS,CACbhD,QAAS8J,EACTvH,eAAgByH,wCAKRtU,GACV,IAAMoU,EAAchL,OAAOiL,OAAO,GAAI/K,KAAKK,MAAMc,QAC5CnB,KAAKK,MAAMW,QAAQtK,KACvBoU,EAAYpU,IAASsJ,KAAKK,MAAMc,OAAOzK,GACvCsJ,KAAKgE,SAAS,CACb7C,OAAQ2J,sCAMV,OAAoC,GAAhC9K,KAAKK,MAAM/C,QAAQC,GAAGhG,OAExB0K,EAAAhH,EAAAiH,cAAA,WACCD,EAAAhH,EAAAiH,cAACuC,EAAA,EAAD,CAAKC,EAAG,GACPzC,EAAAhH,EAAAiH,cAACiJ,EAAD,CAAiB/G,KAAMpE,KAAKK,MAAMyD,WAAWM,KAAMN,WAAY9D,KAAKK,MAAMyD,WAAYO,QAASrE,KAAK6K,kBACpG5I,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACX3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACd7C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACd7C,EAAAhH,EAAAiH,cAACuC,EAAA,EAAD,CAAKC,EAAG,GACPzC,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,KACChB,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,CAAOhC,MAAO,CAACoF,gBAAiB,YAAhC,iBACHpE,EAAAhH,EAAAiH,cAACkJ,EAAD,CAAa9N,QAAS0C,KAAKK,MAAM/C,QAAQC,GACzCiE,WAAYxB,KAAK2K,WACjBlJ,YAAazB,KAAK0K,YAClBvJ,OAAQnB,KAAKK,MAAMc,OACnBH,QAAShB,KAAKK,MAAMW,QACpBxK,IAAK,KACLqK,YAAab,KAAK4K,uBAIrB3I,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACd7C,EAAAhH,EAAAiH,cAACuC,EAAA,EAAD,CAAKC,EAAG,GACPzC,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,KACChB,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,CAAOhC,MAAO,CAACoF,gBAAiB,YAAhC,kBACApE,EAAAhH,EAAAiH,cAACkJ,EAAD,CAAa9N,QAAS0C,KAAKK,MAAM/C,QAAQG,GACzC+D,WAAYxB,KAAK2K,WACjBlJ,YAAazB,KAAK0K,YAClBvJ,OAAQnB,KAAKK,MAAMc,OACnBH,QAAShB,KAAKK,MAAMW,QACpBxK,IAAK,KACLqK,YAAab,KAAK4K,uBAIrB3I,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACd7C,EAAAhH,EAAAiH,cAACuC,EAAA,EAAD,CAAKC,EAAG,GACPzC,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,KACChB,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,CAAOhC,MAAO,CAACoF,gBAAiB,YAAhC,gBACApE,EAAAhH,EAAAiH,cAACkJ,EAAD,CAAa9N,QAAS0C,KAAKK,MAAM/C,QAAQE,GACzCgE,WAAYxB,KAAK2K,WACjBlJ,YAAazB,KAAK0K,YAClBvJ,OAAQnB,KAAKK,MAAMc,OACnBH,QAAShB,KAAKK,MAAMW,QACpBxK,IAAK,KACLqK,YAAab,KAAK4K,wBAKtB3I,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAMC,WAAS,GACd3C,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACd7C,EAAAhH,EAAAiH,cAACuC,EAAA,EAAD,CAAKC,EAAG,GACPzC,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,KACChB,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,CAAOhC,MAAO,CAACoF,gBAAiB,YAAhC,cACApE,EAAAhH,EAAAiH,cAACkJ,EAAD,CAAa9N,QAAS0C,KAAKK,MAAM/C,QAAQM,GACzC4D,WAAYxB,KAAK2K,WACjBlJ,YAAazB,KAAK0K,YAClBvJ,OAAQnB,KAAKK,MAAMc,OACnBH,QAAShB,KAAKK,MAAMW,QACpBxK,IAAK,KACLqK,YAAab,KAAK4K,uBAIrB3I,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACd7C,EAAAhH,EAAAiH,cAACuC,EAAA,EAAD,CAAKC,EAAG,GACPzC,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,KACChB,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,CAAOhC,MAAO,CAACoF,gBAAiB,YAAhC,WACApE,EAAAhH,EAAAiH,cAACkJ,EAAD,CAAa9N,QAAS0C,KAAKK,MAAM/C,QAAQK,GACzC6D,WAAYxB,KAAK2K,WACjBlJ,YAAazB,KAAK0K,YAClBvJ,OAAQnB,KAAKK,MAAMc,OACnBH,QAAShB,KAAKK,MAAMW,QACpBxK,IAAK,KACLqK,YAAab,KAAK4K,uBAIrB3I,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACd7C,EAAAhH,EAAAiH,cAACuC,EAAA,EAAD,CAAKC,EAAG,GACPzC,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,KACChB,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,CAAOhC,MAAO,CAACoF,gBAAiB,YAAhC,WACApE,EAAAhH,EAAAiH,cAACkJ,EAAD,CAAa9N,QAAS0C,KAAKK,MAAM/C,QAAQI,IACzC8D,WAAYxB,KAAK2K,WACjBlJ,YAAazB,KAAK0K,YAClBvJ,OAAQnB,KAAKK,MAAMc,OACnBH,QAAShB,KAAKK,MAAMW,QACpBxK,IAAK,MACLqK,YAAab,KAAK4K,yBAMvB3I,EAAAhH,EAAAiH,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACd7C,EAAAhH,EAAAiH,cAACe,EAAA,EAAD,gBACAhB,EAAAhH,EAAAiH,cAACmJ,EAAD,CAAgB9H,eAAgBvD,KAAKK,MAAMkD,qBAQxCtB,EAAAhH,EAAAiH,cAACoJ,EAAA,EAAD,aApMc3I,wCCaV4I,mLAfX,OACEtJ,EAAAhH,EAAAiH,cAAA,OAAKsJ,UAAU,OACbvJ,EAAAhH,EAAAiH,cAACuJ,EAAA,EAAD,CAAQtT,SAAS,SAASmK,MAAM,WAC9BL,EAAAhH,EAAAiH,cAACwJ,EAAA,EAAD,KACEzJ,EAAAhH,EAAAiH,cAACyJ,EAAA,EAAD,CAAYC,QAAQ,KAAKtJ,MAAM,WAA/B,kBAKJL,EAAAhH,EAAAiH,cAAC2J,EAAD,cAXUlJ,oBCHlBmJ,IAASC,OACP9J,EAAAhH,EAAAiH,cAAC8J,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.3ed02aee.chunk.js","sourcesContent":["var axios = require('axios');\n\nvar cheerio = require('cheerio');\n\nvar url = 'https://cors-anywhere.herokuapp.com/https://fantasyfootballcalculator.com/adp';\nvar pfrDict = {\n  'SF': 'sfo',\n  'NE': 'nwe',\n  'MIA': 'mia',\n  'BUF': 'buf',\n  'NYJ': 'nyj',\n  'BAL': 'rav',\n  'PIT': 'pit',\n  'CLE': 'cle',\n  'CIN': 'cin',\n  'HOU': 'htx',\n  'IND': 'clt',\n  'TEN': 'oti',\n  'JAX': 'jax',\n  'KC': 'kan',\n  'GB': 'gnb',\n  'LAC': 'sdg',\n  'DEN': 'den',\n  'OAK': 'rai',\n  'DAL': 'dal',\n  'PHI': 'phi',\n  'WAS': 'was',\n  'NYG': 'nyg',\n  'CHI': 'chi',\n  'MIN': 'min',\n  'DET': 'det',\n  'NO': 'nor',\n  'ATL': 'atl',\n  'CAR': 'car',\n  'TB': 'tam',\n  'LAR': 'ram',\n  'SEA': 'sea',\n  'ARI': 'crd'\n};\n\nvar scrapeADP = function scrapeADP(html) {\n  var players = {\n    RB: [],\n    QB: [],\n    WR: [],\n    DEF: [],\n    PK: [],\n    TE: []\n  };\n  var $ = cheerio.load(html);\n  $('tr').each(function (i, elem) {\n    var position = $(elem).find('td').eq(3).text();\n\n    if (position == 'RB') {\n      players.RB.push({\n        name: $(elem).find('td').eq(2).text(),\n        pos: position,\n        pick: $(elem).find('td').eq(0).text(),\n        team: $(elem).find('td').eq(4).text(),\n        bye: $(elem).find('td').eq(5).text()\n      });\n    } else if (position == 'WR') {\n      players.WR.push({\n        name: $(elem).find('td').eq(2).text(),\n        pos: position,\n        pick: $(elem).find('td').eq(0).text(),\n        team: $(elem).find('td').eq(4).text(),\n        bye: $(elem).find('td').eq(5).text()\n      });\n    } else if (position == 'QB') {\n      var name = null;\n\n      if ($(elem).find('td').eq(2).text() == 'Pat Mahomes') {\n        name = 'Patrick Mahomes';\n      } else {\n        name = $(elem).find('td').eq(2).text();\n      }\n\n      players.QB.push({\n        name: name,\n        pos: position,\n        pick: $(elem).find('td').eq(0).text(),\n        team: $(elem).find('td').eq(4).text(),\n        bye: $(elem).find('td').eq(5).text()\n      });\n    } else if (position == 'TE') {\n      players.TE.push({\n        name: $(elem).find('td').eq(2).text(),\n        pos: position,\n        pick: $(elem).find('td').eq(0).text(),\n        team: $(elem).find('td').eq(4).text(),\n        bye: $(elem).find('td').eq(5).text()\n      });\n    } else if (position == 'PK') {\n      players.PK.push({\n        name: $(elem).find('td').eq(2).text(),\n        pos: position,\n        pick: $(elem).find('td').eq(0).text(),\n        team: $(elem).find('td').eq(4).text(),\n        bye: $(elem).find('td').eq(5).text()\n      });\n    } else if (position == 'DEF') {\n      players.DEF.push({\n        name: $(elem).find('td').eq(2).text(),\n        pos: position,\n        pick: $(elem).find('td').eq(0).text(),\n        team: $(elem).find('td').eq(4).text(),\n        bye: $(elem).find('td').eq(5).text()\n      });\n    } else {\n      return null;\n    }\n  });\n  return players;\n};\n\nvar scrapePlayerStats = function scrapePlayerStats(player, html) {\n  var COMMENT_PSEUDO_COMMENT_OR_LT_BANG = new RegExp('<!--[\\\\s\\\\S]*?(?:-->)?' + '<!---+>?' // A comment with no body\n  + '|<!(?![dD][oO][cC][tT][yY][pP][eE]|\\\\[CDATA\\\\[)[^>]*>?' + '|<[?][^>]*>?', // A pseudo-comment\n  'g');\n  var data = html.replace(COMMENT_PSEUDO_COMMENT_OR_LT_BANG, \"\");\n  var $ = cheerio.load(data);\n  var picture = $('[itemscope=image]').attr('src');\n\n  if (player.pos === 'DEF') {\n    var row = $('#defense tfoot tr td');\n    var defStats = {\n      name: player.name,\n      picture: picture,\n      interceptions: row.eq(5).text(),\n      pick_six: row.eq(7).text(),\n      sacks: row.eq(15).text(),\n      forced_fumbles: row.eq(10).text(),\n      safties: row.eq(21).text()\n    };\n    return defStats;\n  }\n\n  var playerStats = {\n    name: player.name,\n    picture: picture,\n    ir: {},\n    career: []\n  };\n  var ir = $('#injury');\n\n  if (ir) {\n    var info = ir.find('p').text();\n\n    if (info.length > 0) {\n      playerStats.ir = {\n        injury: info\n      };\n    } else {\n      playerStats.ir = {\n        injury: null\n      };\n    }\n  }\n\n  if (player.pos === 'RB' || player.pos === 'QB') {\n    var years = $('#rushing_and_receiving tr.full_table');\n    years.each(function (i, obj) {\n      var row = $(obj).find('td');\n      var year = years.find('th').eq(i).text().substring(0, 4);\n      playerStats.career.push({\n        age: row.eq(0).text(),\n        team: row.eq(1).find('a').attr('title'),\n        season: year,\n        position: player.pos,\n        number: row.eq(3).text(),\n        games: row.eq(4).text(),\n        games_started: row.eq(5).text(),\n        skills: [{\n          attempts: row.eq(6).text(),\n          yards: row.eq(7).text(),\n          touchdowns: row.eq(8).text(),\n          longest_attempt: row.eq(9).text(),\n          yards_per_attempt: row.eq(10).text(),\n          yards_per_game: row.eq(11).text(),\n          attempts_per_game: row.eq(12).text()\n        }, {\n          targets: row.eq(13).text(),\n          receptions: row.eq(14).text(),\n          yards: row.eq(15).text(),\n          yard_per_reception: row.eq(16).text(),\n          touchdowns: row.eq(17).text(),\n          longest_reception: row.eq(18).text(),\n          receptions_per_game: row.eq(19).text(),\n          yards_per_game: row.eq(20).text(),\n          catch_percentage: row.eq(21).text(),\n          yards_per_target: row.eq(22).text()\n        }],\n        summary: {\n          touches: row.eq(23).text(),\n          yards_per_touch: row.eq(24).text(),\n          scrimmage: row.eq(25).text(),\n          total_touchdowns: row.eq(26).text()\n        },\n        fumbles: row.eq(27).text()\n      });\n    });\n\n    if (player.pos == 'QB') {\n      var rows = $('#passing tr.full_table');\n      rows.each(function (i, obj) {\n        var row = $(obj).find('td');\n        var year = years.find('th').eq(i).text().substring(0, 4);\n        playerStats.career[i].skills.push({\n          qb_record: row.eq(6).text(),\n          completions: row.eq(7).text(),\n          attempts: row.eq(8).text(),\n          completion_percentage: row.eq(9).text(),\n          yards: row.eq(10).text(),\n          touchdowns: row.eq(11).text(),\n          touchdown_percentage: row.eq(12).text(),\n          interceptions: row.eq(13).text(),\n          interception_percentage: row.eq(14).text(),\n          longest_completion: row.eq(15).text(),\n          yards_per_attempt: row.eq(16).text(),\n          adjusted_yards_per_attempt: row.eq(17).text(),\n          yards_per_completion: row.eq(18).text(),\n          yards_per_game: row.eq(19).text(),\n          qbr: row.eq(21).text(),\n          sacks: row.eq(22).text()\n        });\n      });\n    }\n  } else if (player.pos === 'WR' || player.pos === 'TE') {\n    var _years = $('#receiving_and_rushing tr.full_table');\n\n    _years.each(function (i, obj) {\n      var row = $(obj).find('td');\n\n      var year = _years.find('th').eq(i).text().substring(0, 4);\n\n      playerStats.career.push({\n        age: row.eq(0).text(),\n        team: row.eq(1).find('a').attr('title'),\n        season: year,\n        position: player.pos,\n        number: row.eq(3).text(),\n        games: row.eq(4).text(),\n        games_started: row.eq(5).text(),\n        skills: [{\n          targets: row.eq(6).text(),\n          receptions: row.eq(7).text(),\n          yards: row.eq(8).text(),\n          yard_per_reception: row.eq(9).text(),\n          touchdowns: row.eq(10).text(),\n          longest_reception: row.eq(11).text(),\n          receptions_per_game: row.eq(12).text(),\n          yards_per_game: row.eq(13).text(),\n          catch_percentage: row.eq(14).text(),\n          yards_per_target: row.eq(15).text()\n        }, {\n          attempts: row.eq(16).text(),\n          yards: row.eq(17).text(),\n          touchdowns: row.eq(18).text(),\n          longest_attempt: row.eq(19).text(),\n          yards_per_attempt: row.eq(20).text(),\n          yards_per_game: row.eq(21).text(),\n          attempts_per_game: row.eq(22).text()\n        }],\n        summary: {\n          touches: row.eq(23).text(),\n          yards_per_touch: row.eq(24).text(),\n          scrimmage: row.eq(25).text(),\n          total_touchdowns: row.eq(26).text()\n        },\n        fumbles: row.eq(27).text()\n      });\n    });\n  } else if (player.pos === 'PK') {\n    var _years2 = $('#kicking tbody tr');\n\n    _years2.each(function (i, obj) {\n      var row = $(obj).find('td');\n\n      var year = _years2.find('th').eq(i).text().substring(0, 4);\n\n      playerStats.career.push({\n        age: row.eq(0).text(),\n        team: row.eq(1).find('a').attr('title'),\n        season: year,\n        position: player.pos,\n        number: row.eq(3).text(),\n        games: row.eq(4).text(),\n        '0-19': {\n          attempts: row.eq(6).text(),\n          made: row.eq(7).text()\n        },\n        '20-29': {\n          attempts: row.eq(8).text(),\n          made: row.eq(9).text()\n        },\n        '30-39': {\n          attempts: row.eq(10).text(),\n          made: row.eq(11).text()\n        },\n        '40-49': {\n          attempts: row.eq(12).text(),\n          made: row.eq(13).text()\n        },\n        '50+': {\n          attempts: row.eq(14).text(),\n          made: row.eq(15).text()\n        },\n        total: {\n          attempts: row.eq(16).text(),\n          made: row.eq(17).text()\n        },\n        extra_points: {\n          attempts: row.eq(20).text(),\n          made: row.eq(21).text()\n        }\n      });\n    });\n  }\n\n  return playerStats;\n};\n\nvar getADP = function getADP() {\n  return new Promise(function (resolve, reject) {\n    axios.get(url, {\n      headers: {\n        'origin': 1\n      }\n    }).then(function (resp) {\n      var players = scrapeADP(resp.data);\n\n      if (players) {\n        resolve(players);\n      } else {\n        reject('Found player that was not in a known position!');\n      }\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n};\n\nvar scrapePlayerGameLogs = function scrapePlayerGameLogs(player, html) {\n  var COMMENT_PSEUDO_COMMENT_OR_LT_BANG = new RegExp('<!--[\\\\s\\\\S]*?(?:-->)?' + '<!---+>?' // A comment with no body\n  + '|<!(?![dD][oO][cC][tT][yY][pP][eE]|\\\\[CDATA\\\\[)[^>]*>?' + '|<[?][^>]*>?', // A pseudo-comment\n  'g');\n  var data = html.replace(COMMENT_PSEUDO_COMMENT_OR_LT_BANG, \"\");\n  var $ = cheerio.load(data);\n  var logs = {\n    games: []\n  };\n\n  if (player.pos === 'DEF') {\n    var games = $('table').eq(2).find('tbody tr');\n    games.each(function (i, obj) {\n      var row = $(obj).find('td');\n      var a = row.find('a');\n      logs.games.push({\n        date: row.eq(1).text(),\n        day: row.eq(0).text(),\n        won: row.eq(3).text() === 'W' ? true : false,\n        opp: a.eq(1).text(),\n        home: row.eq(5).text() === '@' ? false : true,\n        points_allowed: row.eq(8).text(),\n        interceptions: row.eq(13).text(),\n        sacks: row.eq(14).text(),\n        stats: {\n          defense: {\n            passing: {\n              completions: row.eq(9).text(),\n              attempts: row.eq(10).text(),\n              yards: row.eq(11).text(),\n              touchdowns: row.eq(12).text()\n            },\n            rushing: {\n              attempts: row.eq(19).text(),\n              yards: row.eq(20).text(),\n              touchdowns: row.eq(22).text()\n            },\n            kicking: {\n              field_goals: {\n                made: row.eq(23).text(),\n                attempts: row.eq(24).text()\n              },\n              extra_points: {\n                made: row.eq(25).text(),\n                attempts: row.eq(26).text()\n              }\n            },\n            third_downs: {\n              conversions: row.eq(29).text(),\n              attempts: row.eq(30).text()\n            },\n            punts: row.eq(27).text()\n          }\n        }\n      });\n    });\n  } else if (player.pos === 'QB') {\n    var _games = $('#div_stats table tbody tr');\n\n    _games.each(function (i, obj) {\n      var row = $(obj).find('td');\n      var a = row.find('a');\n      logs.games.push({\n        date: a.eq(0).text(),\n        age: row.eq(2).text(),\n        opp: a.eq(2).text(),\n        home: row.eq(4).text() === '@' ? false : true,\n        result: a.eq(3).text(),\n        stats: {\n          passing: {\n            completions: row.eq(8).text(),\n            attempts: row.eq(9).text(),\n            completion_percentage: row.eq(10).text(),\n            yards: row.eq(11).text(),\n            touchdowns: row.eq(12).text(),\n            interceptions: row.eq(13).text(),\n            qbr: row.eq(14).text(),\n            sacked: row.eq(15).text(),\n            yards_per_attempt: row.eq(17).text()\n          },\n          rushing: {\n            attempts: row.eq(19).text(),\n            yards: row.eq(20).text(),\n            yards_per_attempt: row.eq(21).text(),\n            touchdowns: row.eq(22).text()\n          }\n        }\n      });\n    });\n  } else if (player.pos === 'WR' || player.pos === 'TE') {\n    var _games2 = $('#div_stats table tbody tr');\n\n    _games2.each(function (i, obj) {\n      var row = $(obj).find('td');\n      var a = row.find('a');\n      logs.games.push({\n        date: a.eq(0).text(),\n        age: row.eq(2).text(),\n        opp: a.eq(2).text(),\n        home: row.eq(4).text(),\n        result: a.eq(3).text(),\n        stats: {\n          recieving: {\n            targets: row.eq(8).text(),\n            receptions: row.eq(9).text(),\n            yards: row.eq(10).text(),\n            yards_per_reception: row.eq(11).text(),\n            touchdowns: row.eq(12).text(),\n            catch_percentage: row.eq(13).text(),\n            yards_per_target: row.eq(14).text()\n          }\n        }\n      });\n    });\n  } else if (player.pos === 'RB') {\n    var _games3 = $('#div_stats table tbody tr');\n\n    _games3.each(function (i, obj) {\n      var row = $(obj).find('td');\n      var a = row.find('a');\n      logs.games.push({\n        date: a.eq(0).text(),\n        age: row.eq(2).text(),\n        opp: a.eq(2).text(),\n        home: row.eq(4).text() === '@' ? false : true,\n        result: a.eq(3).text(),\n        stats: {\n          rushing: {\n            attempts: row.eq(8).text(),\n            yards: row.eq(9).text(),\n            yards_per_attempt: row.eq(10).text(),\n            touchdowns: row.eq(11).text()\n          },\n          recieving: {\n            targets: row.eq(12).text(),\n            receptions: row.eq(13).text(),\n            yards: row.eq(14).text(),\n            yards_per_reception: row.eq(15).text(),\n            touchdowns: row.eq(16).text(),\n            catch_percentage: row.eq(17).text(),\n            yards_per_target: row.eq(18).text()\n          }\n        }\n      });\n    });\n  } else if (player.pos === 'PK') {\n    var _games4 = $('#div_stats table tbody tr');\n\n    _games4.each(function (i, obj) {\n      var row = $(obj).find('td');\n      var a = row.find('a');\n      logs.games.push({\n        name: player.name,\n        pos: player.pos,\n        date: a.eq(0).text(),\n        age: row.eq(2).text(),\n        opp: a.eq(2).text(),\n        home: row.eq(4).text() === '@' ? false : true,\n        result: a.eq(3).text(),\n        stats: {\n          kicking: {\n            extra_points: {\n              made: row.eq(8).text(),\n              attempts: row.eq(9).text()\n            },\n            field_goals: {\n              made: row.eq(11).text(),\n              attempts: row.eq(12).text()\n            }\n          }\n        }\n      });\n    });\n  }\n\n  return logs;\n};\n\nvar getLastInitial = function getLastInitial(name) {\n  var nameArray = name.trim().toUpperCase().replace('JR.', '').replace(' JR', '').replace('JR ').split(' ');\n  var initial = nameArray[nameArray.length - 1].charAt(0);\n  return initial;\n};\n\nvar getPlayerGameLogs = function getPlayerGameLogs(player) {\n  var pfr = 'https://cors-anywhere.herokuapp.com/https://www.pro-football-reference.com';\n  var team = pfrDict[player.team];\n  var teamPage = \"\".concat(pfr, \"/teams/\").concat(team);\n  var initial = getLastInitial(player.name);\n\n  if (player.pos === 'DEF') {\n    return new Promise(function (resolve, reject) {\n      axios.get(teamPage, {\n        headers: {\n          'origin': 1\n        }\n      }).then(function (res) {\n        var $ = cheerio.load(res.data);\n        var year = $('[data-stat=year_id] a').eq(0).attr('href');\n        var teamYearSum = \"\".concat(pfr).concat(year);\n        axios.get(teamYearSum, {\n          headers: {\n            'origin': 1\n          }\n        }).then(function (res) {\n          var teamYearSumPage = cheerio.load(res.data);\n          var defStatsPageRef = teamYearSumPage('#inner_nav ul li a').eq(4).attr('href');\n          axios.get(\"\".concat(pfr).concat(defStatsPageRef), {\n            headers: {\n              'origin': 1\n            }\n          }).then(function (res) {\n            resolve(scrapePlayerGameLogs(player, res.data));\n          }).catch(function (err) {\n            reject(err);\n          });\n        }).catch(function (err) {\n          reject(err);\n        });\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  }\n\n  return new Promise(function (resolve, reject) {\n    var playersPageURL = \"\".concat(pfr, \"/players/\").concat(initial);\n    axios.get(playersPageURL, {\n      headers: {\n        'origin': 1\n      }\n    }).then(function (res) {\n      var playersPage = cheerio.load(res.data);\n      playersPage('#div_players p b').each(function (i, obj) {\n        var a = playersPage(obj).find('a').eq(0);\n        var pfrTag = playersPage(obj).html();\n        var pos = player.pos;\n\n        if (player.pos === 'PK') {\n          pos = 'K';\n        }\n\n        var pfrName = a.text().toLowerCase().replace('jr.', '').replace(' jr', '').replace('jr ', '').replace(\"'\", \"\");\n        var adpName = player.name.toLowerCase().replace('jr.', '').replace(' jr', '').replace('jr ', '').replace(\"'\", \"\");\n\n        if (pfrName === adpName && pfrTag.search(pos) != -1) {\n          var statsPageRef = a.attr('href');\n          var statsPageURL = \"\".concat(pfr).concat(statsPageRef);\n          axios.get(statsPageURL, {\n            headers: {\n              'origin': 1\n            }\n          }).then(function (res) {\n            var statsPage = cheerio.load(res.data);\n            var botNav = statsPage('#bottom_nav_container ul').eq(1);\n            var currentYearLogsRef = botNav.find('a').last().attr('href');\n            var currentYearLogsURL = \"\".concat(pfr).concat(currentYearLogsRef);\n            axios.get(currentYearLogsURL, {\n              headers: {\n                'origin': 1\n              }\n            }).then(function (res) {\n              resolve(scrapePlayerGameLogs(player, res.data));\n            }).catch(function (err) {\n              reject(err);\n            });\n          }).catch(function (err) {\n            reject(err);\n          });\n        }\n      }, function () {\n        reject('Didnt find anything with this URL!');\n      });\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n};\n\nvar getPlayerStats = function getPlayerStats(player) {\n  var pfr = 'https://cors-anywhere.herokuapp.com/https://www.pro-football-reference.com';\n  var team = pfrDict[player.team];\n  var teamPage = \"\".concat(pfr, \"/teams/\").concat(team);\n  var initial = getLastInitial(player.name);\n\n  if (player.pos === 'DEF') {\n    return new Promise(function (resolve, reject) {\n      axios.get(teamPage, {\n        headers: {\n          'origin': 1\n        }\n      }).then(function (res) {\n        var $ = cheerio.load(res.data);\n        var year = $('[data-stat=year_id] a').eq(0).attr('href');\n        var teamYearSum = \"\".concat(pfr).concat(year);\n        axios.get(teamYearSum, {\n          headers: {\n            'origin': 1\n          }\n        }).then(function (res) {\n          resolve(scrapePlayerStats(player, res.data));\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    });\n  }\n\n  return new Promise(function (resolve, reject) {\n    var playersPageURL = \"\".concat(pfr, \"/players/\").concat(initial);\n    axios.get(playersPageURL, {\n      headers: {\n        'origin': 1\n      }\n    }).then(function (res) {\n      var playersPage = cheerio.load(res.data);\n      playersPage('#div_players p b').each(function (i, obj) {\n        var a = playersPage(obj).find('a').eq(0);\n        var pfrTag = playersPage(obj).html();\n        var pos = player.pos;\n\n        if (player.pos === 'PK') {\n          pos = 'K';\n        }\n\n        var pfrName = a.text().toLowerCase().replace('jr.', '').replace(' jr', '').replace('jr ', '').replace(\"'\", \"\");\n        var adpName = player.name.toLowerCase().replace('jr.', '').replace(' jr', '').replace('jr ', '').replace(\"'\", \"\");\n\n        if (pfrName === adpName && pfrTag.search(pos) != -1) {\n          var statsPageRef = a.attr('href');\n          var statsPageURL = \"\".concat(pfr).concat(statsPageRef);\n          axios.get(statsPageURL, {\n            headers: {\n              'origin': 1\n            }\n          }).then(function (res) {\n            resolve(scrapePlayerStats(player, res.data));\n          }).catch(function (err) {\n            reject(err);\n          });\n        }\n      }, function () {\n        reject('Didnt find anything with this URL!');\n      });\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n};\n\nmodule.exports = {\n  getADP: getADP,\n  getPlayerStats: getPlayerStats,\n  getPlayerGameLogs: getPlayerGameLogs\n};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport ReactTable from 'react-table';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport \"react-table/react-table.css\";\n\nclass PlayerTable extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.toggleDrafted = this.toggleDrafted.bind(this);\n\t\tthis.togglePicked = this.togglePicked.bind(this);\n\t}\n\n\ttogglePicked(name) {\n\t\tif (!this.props.drafted[name]) {\n\t\t\tthis.props.togglePick(name);\n\t\t}\n\t}\n\n\ttoggleDrafted(name, pos, team, bye) {\n\t\tif (!this.props.picked[name]) {\n\t\t\tthis.props.toggleDraft(name, pos, team, bye);\n\t\t}\n\t}\n\n\ttdFn = (state, rowInfo, column, instance) => {\n\t\treturn {\n\t      onClick: (e, handleOriginal) => {\n\t        // IMPORTANT! React-Table uses onClick internally to trigger\n\t        // events like expanding SubComponents and pivots.\n\t        // By default a custom 'onClick' handler will override this functionality.\n\t        // If you want to fire the original onClick handler, call the\n\t        // 'handleOriginal' function.\n\t        if (column.Header === 'Name') {\n\t        \tthis.props.displayInfo(rowInfo.original.name, rowInfo.original.team, this.props.pos);\n\t        }\n\t        if (handleOriginal) {\n\t          handleOriginal()\n\t        }\n\t      }\n\t\t}\n\t}\n\n\n\trowFn = (state, rowInfo, column, instance) => {\n\t    if (rowInfo && this.props.drafted[rowInfo.original.name]) {\n\t\t    return {\n\t\t\t    onClick: (e, handleOriginal) => {\n\t\t\t        // IMPORTANT! React-Table uses onClick internally to trigger\n\t\t\t        // events like expanding SubComponents and pivots.\n\t\t\t        // By default a custom 'onClick' handler will override this functionality.\n\t\t\t        // If you want to fire the original onClick handler, call the\n\t\t\t        // 'handleOriginal' function.\n\t\t\t        //this.props.displayInfo(rowInfo.original.name, rowInfo.original.team);\n\t\t\t\t    if (handleOriginal) {\n\t\t\t    \t    handleOriginal();\n\t\t\t      \t}\n\t\t\t    },\n\t\t\t    style: {\n\t\t\t    \tbackground: 'lightgreen'\n\t\t\t    }\n\t\t\t};\t\n\t    } else if (rowInfo && this.props.picked[rowInfo.original.name]) {\n\t    \treturn {\n\t\t\t    onClick: (e, handleOriginal) => {\n\t\t\t        // IMPORTANT! React-Table uses onClick internally to trigger\n\t\t\t        // events like expanding SubComponents and pivots.\n\t\t\t        // By default a custom 'onClick' handler will override this functionality.\n\t\t\t        // If you want to fire the original onClick handler, call the\n\t\t\t        // 'handleOriginal' function.\n\t\t\t        //this.props.displayInfo(rowInfo.original.name, rowInfo.original.team);\n\t\t\t\t    if (handleOriginal) {\n\t\t\t    \t    handleOriginal();\n\t\t\t      \t}\n\t\t\t    },\n\t\t\t    style: {\n\t\t\t    \tbackground: 'red'\n\t\t\t    }\n\t\t\t};\n\t    } else {\n\t    \treturn {\n\t\t\t    onClick: (e, handleOriginal) => {\n\t\t\t        // IMPORTANT! React-Table uses onClick internally to trigger\n\t\t\t        // events like expanding SubComponents and pivots.\n\t\t\t        // By default a custom 'onClick' handler will override this functionality.\n\t\t\t        // If you want to fire the original onClick handler, call the\n\t\t\t        // 'handleOriginal' function.\n\t\t\t        //this.props.displayInfo(rowInfo.original.name, rowInfo.original.team);\n\t\t\t\t    if (handleOriginal) {\n\t\t\t    \t    handleOriginal();\n\t\t\t      \t}\n\t\t\t    },\n\t\t\t    style: {\n\t\t\t    \tbackground: 'white'\n\t\t\t    }\n\t\t\t};\n\t    }\n\t  };\n\n\trender() {\n\t\tlet data = [];\n\t\tconst {players} = this.props;\n\t\tplayers.forEach((player) => {\n\t\t\tdata.push({\n\t\t\t\tname: player.name,\n\t\t\t\tteam: player.team,\n\t\t\t\tbye: player.bye\n\t\t\t});\n\t\t});\n\t\tconst columns = [\n\t\t{\n\t\t\tid: \"picker\",\n\t\t\taccessor: \"\",\n\t\t\tHeader: \"Picked\",\n\t\t\tCell: ({ original }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tchecked={this.props.picked[original.name] === true}\n\t\t\t\t\t\tonChange={() => this.togglePicked(original.name)}\n\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}, {\n\t\t\tid: \"drafter\",\n\t\t\taccessor: \"\",\n\t\t\tHeader: \"Drafted\",\n\t\t\tCell: ({ original }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tchecked={this.props.drafted[original.name] === true}\n\t\t\t\t\t\tonChange={() => this.toggleDrafted(original.name, this.props.pos, original.team, original.bye)}\n\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}, {\n\t\t\tHeader: 'Name',\n\t\t\taccessor: 'name'\n\t\t}, {\n\t\t\tHeader: 'Team',\n\t\t\taccessor: 'team'\n\t\t}, {\n\t\t\tHeader: 'Bye',\n\t\t\taccessor: 'bye'\n\t\t}];\n\n\t\treturn <ReactTable data={data} columns={columns} getTrProps={this.rowFn} getTdProps={this.tdFn}/>\n\t}\n}\nexport default PlayerTable;","import React, {Component} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass DraftedPlayers extends Component {\n\n\tcreateData(name, calories, fat, carbs, protein) {\n\t  return { name, calories, fat, carbs, protein };\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Paper>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t          <TableRow>\n\t\t            <TableCell>Name</TableCell>\n\t\t            <TableCell>Pos</TableCell>\n\t\t            <TableCell>Bye</TableCell>\n\t\t            <TableCell>Team</TableCell>\n\t\t          </TableRow>\n\t\t        </TableHead>\n\t\t         <TableBody>\n\t\t          {this.props.draftedPlayers.map(row => (\n\t\t            <TableRow key={row.name}>\n\t\t              <TableCell>\n\t\t                {row.name}\n\t\t              </TableCell>\n\t\t              <TableCell align=\"right\">{row.pos}</TableCell>\n\t\t              <TableCell align=\"right\">{row.bye}</TableCell>\n\t\t              <TableCell align=\"right\">{row.team}</TableCell>\n\t\t            </TableRow>\n\t\t          ))}\n\t\t        </TableBody>\n\t\t\t</Table>\n\t\t</Paper>);\n\t}\n\n}\nexport default DraftedPlayers;","import React, {Component} from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport {Bar, Line, Doughnut, Radar} from 'react-chartjs-2';\nconst broker = require('adp-scraper');\n\n \n\nclass PlayerInfoModal extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinfo: null,\n\t\t\tlogs: null\n\t\t};\n\t}\n\n\tgetPlayerInfo() {\n\t\tif (this.props.playerInfo.name != null) {\n\t\t\tconsole.log(this.props.playerInfo);\n\t\t\tPromise.all([broker.getPlayerStats(this.props.playerInfo), broker.getPlayerGameLogs(this.props.playerInfo)])\n\t\t\t.then(res => {\n\t\t\t\tthis.setState({info: res[0], logs: res[1]});\n\t\t\t\tconsole.log(res[0]);\n\t\t\t\tconsole.log(res[1]);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst styles = {\n\t\t    dialogPaper: {\n\t\t        minHeight: '80vh',\n\t\t        maxHeight: '80vh',\n\t\t    },\n\t\t};\n\t\tif (this.state.info != null && this.state.info.name == this.props.playerInfo.name) {\n\t\t\tlet injury = '';\n\t\t\tlet cur = 0;\n\t\t\tif (this.props.playerInfo.pos != 'DEF') {\n\t\t\t\tif (this.state.info.ir.injury) {\n\t\t\t\t\tinjury = this.state.info.ir.injury;\n\t\t\t\t}\n\t\t\t\tcur = this.state.info.career.length - 1;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Dialog open={this.props.open} onClose={this.props.onClose} maxWidth={\"md\"} fullWidth={true}>\n\t\t\t\t\t    <DialogTitle id=\"alert-dialog-title\">{this.state.info.name}</DialogTitle>\n\t\t\t\t\t    <Box m={1}>\n\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t    \t<Grid container>\n\t\t\t\t\t\t    \t\t<Grid item md={2}>\n\t\t\t\t\t\t    \t\t\t<Avatar alt={this.state.info.name} src={this.state.info.picture} style={{margin:10,width:60,height:60}}/>\n\t\t\t\t\t\t    \t\t</Grid>\n\t\t\t\t\t\t    \t\t<Grid item md={10}>\n\t\t\t\t\t\t    \t\t\t<Paper>\n\t\t\t\t\t\t    \t\t\t\t<h1>2018 Summary</h1>\n\t\t\t\t\t\t    \t\t\t\t<Table>\n\t\t\t\t\t\t    \t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t    \t\t\t\t\t{ (() => {\n\t\t\t\t\t\t\t    \t\t\t\t\t\tif (this.props.playerInfo.pos === 'WR' || this.props.playerInfo.pos === 'RB' || this.props.playerInfo.pos == 'TE') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<TableCell>Yards</TableCell>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<TableCell>Fumbles</TableCell>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<TableCell>TDs</TableCell>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<TableCell>Games Started</TableCell>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t);\n\t\t\t\t\t\t\t    \t\t\t\t\t\t} else if (this.props.playerInfo.pos === 'QB') {\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t<TableCell>Throwing Yards</TableCell>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<TableCell>Touchdowns</TableCell>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<TableCell>Interceptions</TableCell>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<TableCell>QBR</TableCell>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t    \t\t\t\t\t\t} else if (this.props.playerInfo.pos === 'PK') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t<TableCell>Total Attempts</TableCell>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<TableCell>Total Made</TableCell>\t\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t    \t\t\t\t\t\t} else if (this.props.playerInfo.pos === 'DEF') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t<TableCell>Interceptions</TableCell>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<TableCell>Pick Six</TableCell>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<TableCell>Sacks</TableCell>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<TableCell>Forced Fumbles</TableCell>\n\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<TableCell>Safties</TableCell>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t    \t\t\t\t\t\t}\n\t\t\t\t\t\t\t    \t\t\t\t\t})()\n\t\t\t\t\t\t\t    \t\t\t\t\t}\n\t\t\t\t\t\t    \t\t\t\t\t</TableHead>\n\t\t\t\t\t\t    \t\t\t\t\t<TableBody>\t\t\t\t\t\t    \t\t\t\t\t\t\n\t\t\t\t\t\t    \t\t\t\t\t\t{ (() => {\n\t\t\t\t\t\t    \t\t\t\t\t\t\tif (this.props.playerInfo.pos === 'WR' || this.props.playerInfo.pos === 'RB' || this.props.playerInfo.pos == 'TE') {\n\t\t\t\t\t\t    \t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t<TableRow>\t\t\t\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.career[cur].summary.scrimmage}</TableCell>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.career[cur].fumbles}</TableCell>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.career[cur].summary.total_touchdowns}</TableCell>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.career[cur].games_started}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t);\n\t\t\t\t\t\t    \t\t\t\t\t\t\t} else if (this.props.playerInfo.pos === 'QB') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t<TableRow>\t\t\t\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.career[cur].skills[2].yards}</TableCell>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.career[cur].skills[2].touchdowns}</TableCell>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.career[cur].skills[2].interceptions}</TableCell>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.career[cur].skills[2].qbr}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t);\n\t\t\t\t\t\t\t    \t\t\t\t\t\t} else if (this.props.playerInfo.pos === 'PK') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t<TableRow>\t\t\t\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.career[cur].total.attempts}</TableCell>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.career[cur].total.made}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t);\n\t\t\t\t\t\t\t    \t\t\t\t\t\t} else if (this.props.playerInfo.pos === 'DEF') {\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t<TableRow>\t\t\t\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.interceptions}</TableCell>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.pick_six}</TableCell>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.sacks}</TableCell>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.forced_fumbles}</TableCell>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t<TableCell>{this.state.info.safties}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t);\n\t\t\t\t\t\t\t    \t\t\t\t\t\t}\n\t\t\t\t\t\t    \t\t\t\t\t\t})()\n\t\t\t\t\t\t    \t\t\t\t\t\t}\n\t\t\t\t\t\t    \t\t\t\t\t</TableBody>\n\t\t\t\t\t\t    \t\t\t\t</Table>\n\t\t\t\t\t\t    \t\t\t</Paper>\n\t\t\t\t\t\t    \t\t</Grid>\n\t\t\t\t\t\t    \t</Grid>\n\t\t\t\t\t\t    \t<Grid container>\n\t\t\t\t\t\t    \t\t<Grid item md={12}>\n\t\t\t\t\t\t    \t\t\t\t{(() => {\n\t\t\t\t\t\t    \t\t\t\t\tif (injury != '') {\n\t\t\t\t\t\t    \t\t\t\t\t\treturn (\n\t\t\t\t\t\t    \t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t    \t\t\t\t\t\t\t\tInjury: {injury}\n\t\t\t\t\t\t    \t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t    \t\t\t\t\t\t);\n\t\t\t\t\t\t    \t\t\t\t\t} else {\n\t\t\t\t\t\t    \t\t\t\t\t\treturn (\n\t\t\t\t\t\t    \t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t    \t\t\t\t\t\t\t\tHealthy\n\t\t\t\t\t\t    \t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t    \t\t\t\t\t\t);\n\t\t\t\t\t\t    \t\t\t\t\t}\n\t\t\t\t\t\t    \t\t\t\t})()\n\t\t\t\t\t\t    \t\t\t\t}\n\t\t\t\t\t\t    \t\t</Grid>\n\t\t\t\t\t\t    \t</Grid>\n\t\t\t\t\t\t    \t\t{ \t(() => {\n\t\t\t\t\t\t    \t\t\t\tif (this.props.playerInfo.pos === 'RB') {\n\t\t\t\t\t\t\t    \t\t\t\tlet yearLabels = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet yearRushTds = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet yearRecievingTds = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet yearRushYards = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet yearRecievingYards = [];\n\t\t\t\t\t\t\t    \t\t\t\tthis.state.info.career.forEach(year => {\n\t\t\t\t\t\t\t    \t\t\t\t\tyearLabels.push(year.season);\n\t\t\t\t\t\t\t    \t\t\t\t\tyearRushTds.push(parseFloat(year.skills[0].touchdowns));\n\t\t\t\t\t\t\t    \t\t\t\t\tyearRecievingTds.push(parseFloat(year.skills[1].touchdowns));\n\t\t\t\t\t\t\t    \t\t\t\t\tyearRushYards.push(parseFloat(year.skills[0].yards));\n\t\t\t\t\t\t\t    \t\t\t\t\tyearRecievingYards.push(parseFloat(year.skills[1].yards));\n\t\t\t\t\t\t\t    \t\t\t\t});\n\t\t\t\t\t\t\t    \t\t\t\tlet gameLabels = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGameRushTds = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGameRecievingTds = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGameRecievingYards = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGameRushYards = [];\n\t\t\t\t\t\t\t    \t\t\t\tthis.state.logs.games.forEach(game => {\n\t\t\t\t\t\t\t    \t\t\t\t\tgameLabels.push(game.opp);\n\t\t\t\t\t\t\t    \t\t\t\t\tperGameRushTds.push(parseFloat(game.stats.rushing.touchdowns));\n\t\t\t\t\t\t\t    \t\t\t\t\tperGameRecievingTds.push(parseFloat(game.stats.recieving.touchdowns));\n\t\t\t\t\t\t\t    \t\t\t\t\tperGameRecievingYards.push(parseFloat(game.stats.recieving.yards));\n\t\t\t\t\t\t\t    \t\t\t\t\tperGameRushYards.push(parseFloat(game.stats.rushing.yards));\n\t\t\t\t\t\t\t    \t\t\t\t});\n\t\t\t\t\t\t\t    \t\t\t\tconst yearTdData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: yearLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Rushing Touchdowns',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: yearRushTds\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}, {\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Recieving Touchdowns',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n      \t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: yearRecievingTds\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\tconst yearYardData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: yearLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Rushing Yards',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: yearRushYards\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}, {\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Recieving Yards',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n      \t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: yearRecievingYards\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\tconst gameTdData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: gameLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Rushing Touchdowns',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGameRushTds\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}, {\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Recieving Touchdowns',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n      \t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGameRecievingTds\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\tconst gameYardData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: gameLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Rushing Yards',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGameRushYards\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}, {\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Recieving Yards',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n      \t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGameRecievingYards\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\treturn (\n\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t<h4>Career Stats</h4>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Bar data={yearTdData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Bar data={yearYardData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<h4>{this.state.info.career[cur].season} Per Game Stats</h4>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Bar data={gameTdData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Bar data={gameYardData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t    \t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t    \t\t\t\t);\n\t\t\t\t\t\t\t    \t\t\t} else if (this.props.playerInfo.pos === 'WR' || this.props.playerInfo.pos === 'TE') {\n\t\t\t\t\t\t\t    \t\t\t\tlet yearLabels = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet yearRecievingTds = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet yearRecievingYards = [];\n\t\t\t\t\t\t\t    \t\t\t\tthis.state.info.career.forEach(year => {\n\t\t\t\t\t\t\t    \t\t\t\t\tyearLabels.push(year.season);\t\t\t\t\t\t\t    \t\t\t\t\t\n\t\t\t\t\t\t\t    \t\t\t\t\tyearRecievingTds.push(parseFloat(year.skills[0].touchdowns));\n\t\t\t\t\t\t\t    \t\t\t\t\tyearRecievingYards.push(parseFloat(year.skills[0].yards));\n\t\t\t\t\t\t\t    \t\t\t\t});\n\t\t\t\t\t\t\t    \t\t\t\tlet gameLabels = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGameRecievingTds = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGameRecievingYards = [];\n\t\t\t\t\t\t\t    \t\t\t\tthis.state.logs.games.forEach(game => {\n\t\t\t\t\t\t\t    \t\t\t\t\tgameLabels.push(game.opp);\n\t\t\t\t\t\t\t    \t\t\t\t\tperGameRecievingTds.push(parseFloat(game.stats.recieving.touchdowns));\n\t\t\t\t\t\t\t    \t\t\t\t\tperGameRecievingYards.push(parseFloat(game.stats.recieving.yards));\n\t\t\t\t\t\t\t    \t\t\t\t});\n\t\t\t\t\t\t\t    \t\t\t\tconst yearTdData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: yearLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Recieving Touchdowns',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tfill: false,\n\t\t\t\t\t\t\t\t\t\t\t\t        lineTension: 0.1,\n\t\t\t\t\t\t\t\t\t\t\t\t        backgroundColor: '#90caf9',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: '#42a5f5',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderCapStyle: 'butt',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDash: [],\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDashOffset: 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t        borderJoinStyle: 'miter',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBackgroundColor: '#fff',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverRadius: 5,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderWidth: 2,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointRadius: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHitRadius: 10,\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: yearRecievingTds\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\tconst yearYardData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: yearLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Recieving Yards',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tfill: false,\n\t\t\t\t\t\t\t\t\t\t\t\t        lineTension: 0.1,\n\t\t\t\t\t\t\t\t\t\t\t\t        backgroundColor: '#90caf9',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: '#42a5f5',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderCapStyle: 'butt',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDash: [],\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDashOffset: 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t        borderJoinStyle: 'miter',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBackgroundColor: '#fff',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverRadius: 5,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderWidth: 2,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointRadius: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHitRadius: 10,\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: yearRecievingYards\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\tconst gameTdData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: gameLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Recieving Touchdowns',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tfill: false,\n\t\t\t\t\t\t\t\t\t\t\t\t        lineTension: 0.1,\n\t\t\t\t\t\t\t\t\t\t\t\t        backgroundColor: '#2196f3',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: '#1976d2',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderCapStyle: 'butt',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDash: [],\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDashOffset: 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t        borderJoinStyle: 'miter',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBackgroundColor: '#fff',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverRadius: 5,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderWidth: 2,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointRadius: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHitRadius: 10,\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGameRecievingTds\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\tconst gameYardData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: gameLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Recieving Yards',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tfill: false,\n\t\t\t\t\t\t\t\t\t\t\t\t        lineTension: 0.1,\n\t\t\t\t\t\t\t\t\t\t\t\t        backgroundColor: '#2196f3',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: '#1976d2',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderCapStyle: 'butt',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDash: [],\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDashOffset: 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t        borderJoinStyle: 'miter',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBackgroundColor: '#fff',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverRadius: 5,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderWidth: 2,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointRadius: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHitRadius: 10,\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGameRecievingYards\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\treturn (\n\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t<h4>Career Stats</h4>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Line data={yearTdData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Line data={yearYardData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<h4>{this.state.info.career[cur].season} Per Game Stats</h4>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Line data={gameTdData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Line data={gameYardData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t</Grid>\n\t\t\t\t\t\t\t    \t\t\t\t);\n\t\t\t\t\t\t\t    \t\t\t} else if (this.props.playerInfo.pos === 'QB') {\n\t\t\t\t\t\t\t\t\t\t\t\tlet yearLabels = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet yearPassingTds = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet yearPassingYards = [];\n\t\t\t\t\t\t\t    \t\t\t\tthis.state.info.career.forEach(year => {\n\t\t\t\t\t\t\t    \t\t\t\t\tyearLabels.push(year.season);\t\t\t\t\t\t\t    \t\t\t\t\t\n\t\t\t\t\t\t\t    \t\t\t\t\tyearPassingTds.push(parseFloat(year.skills[2].touchdowns));\n\t\t\t\t\t\t\t    \t\t\t\t\tyearPassingYards.push(parseFloat(year.skills[2].yards));\n\t\t\t\t\t\t\t    \t\t\t\t});\n\t\t\t\t\t\t\t    \t\t\t\tlet gameLabels = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGamePassTds = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGameRushTds = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGamePassYards = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGameRushYards = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGamePicks = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGameQBR = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet perGameSacked = [];\n\t\t\t\t\t\t\t    \t\t\t\tthis.state.logs.games.forEach(game => {\n\t\t\t\t\t\t\t    \t\t\t\t\tgameLabels.push(game.opp);\n\t\t\t\t\t\t\t    \t\t\t\t\tperGameRushTds.push(parseFloat(game.stats.rushing.touchdowns));\n\t\t\t\t\t\t\t    \t\t\t\t\tperGamePassTds.push(parseFloat(game.stats.passing.touchdowns));\n\t\t\t\t\t\t\t    \t\t\t\t\tperGamePassYards.push(parseFloat(game.stats.passing.yards));\n\t\t\t\t\t\t\t    \t\t\t\t\tperGameRushYards.push(parseFloat(Math.abs(game.stats.rushing.yards)));\n\t\t\t\t\t\t\t    \t\t\t\t\tperGamePicks.push(parseFloat(game.stats.passing.interceptions));\n\t\t\t\t\t\t\t    \t\t\t\t\tperGameQBR.push(parseFloat(game.stats.passing.qbr));\n\t\t\t\t\t\t\t    \t\t\t\t\tperGameSacked.push(parseFloat(game.stats.passing.sacked));\n\t\t\t\t\t\t\t    \t\t\t\t});\n\t\t\t\t\t\t\t    \t\t\t\tconst yearTdData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: yearLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Passing Touchdowns',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tfill: false,\n\t\t\t\t\t\t\t\t\t\t\t\t        lineTension: 0.1,\n\t\t\t\t\t\t\t\t\t\t\t\t        backgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderCapStyle: 'butt',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDash: [],\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDashOffset: 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t        borderJoinStyle: 'miter',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBackgroundColor: '#fff',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverRadius: 5,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderWidth: 2,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointRadius: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHitRadius: 10,\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: yearPassingTds\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\tconst yearYardData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: yearLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Passing Yards',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tfill: false,\n\t\t\t\t\t\t\t\t\t\t\t\t        lineTension: 0.1,\n\t\t\t\t\t\t\t\t\t\t\t\t        backgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderCapStyle: 'butt',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDash: [],\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDashOffset: 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t        borderJoinStyle: 'miter',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBackgroundColor: '#fff',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverRadius: 5,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderWidth: 2,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointRadius: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHitRadius: 10,\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: yearPassingYards\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t}\n\t\t\t\t\t\t\t    \t\t\t\tconst gameQBRData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: gameLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'QBR',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tfill: false,\n\t\t\t\t\t\t\t\t\t\t\t\t        lineTension: 0.1,\n\t\t\t\t\t\t\t\t\t\t\t\t        backgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderCapStyle: 'butt',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDash: [],\n\t\t\t\t\t\t\t\t\t\t\t\t        borderDashOffset: 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t        borderJoinStyle: 'miter',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBackgroundColor: '#fff',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointBorderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverRadius: 5,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHoverBorderWidth: 2,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointRadius: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        pointHitRadius: 10,\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGameQBR\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t}\n\t\t\t\t\t\t\t    \t\t\t\tconst gamePickSackData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: gameLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Times Sacked',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGameSacked\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}, {\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Times Picked',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n      \t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGamePicks\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\tconst gameTdData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: gameLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Rushing Touchdowns',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGameRushTds\n\t\t\t\t\t\t\t    \t\t\t\t\t}, {\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Passing Touchdowns',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n      \t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGamePassTds\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\tconst gameYardData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: gameLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Rushing Yards',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGameRushYards\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}, {\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Passing Yards',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n      \t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: perGamePassYards\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\treturn (\n\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t<h4>Career Stats</h4>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Line data={yearTdData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Line data={yearYardData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<h4>{this.state.info.career[cur].season} Per Game Stats</h4>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Bar data={gameTdData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Bar data={gameYardData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Bar data={gamePickSackData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Line data={gameQBRData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t</Grid>\n\t\t\t\t\t\t\t    \t\t\t\t);\n\t\t\t\t\t\t\t    \t\t\t} else if (this.props.playerInfo.pos === 'PK') {\t\t\t\t\t    \t\t\t\t\t\n\t\t\t\t\t\t\t    \t\t\t\tlet extra = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet chips = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet twenties = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet thirties = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet fourties = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet fifties = [];\n\n\t\t\t\t\t\t\t    \t\t\t\tlet extraAttempted = parseFloat(this.state.info.career[cur]['extra_points'].attempts);\n\t\t\t\t\t\t\t    \t\t\t\tlet extraMade = parseFloat(this.state.info.career[cur]['extra_points'].made);\n\t\t\t\t\t\t\t    \t\t\t\tlet chipsAttempted = parseFloat(this.state.info.career[cur]['0-19'].attempts);\n\t\t\t\t\t\t\t    \t\t\t\tlet chipsMade = parseFloat(this.state.info.career[cur]['0-19'].made); \n\t\t\t\t\t\t\t    \t\t\t\tlet twentiesAttempted = parseFloat(this.state.info.career[cur]['20-29'].attempts);\n\t\t\t\t\t\t\t    \t\t\t\tlet twentiesMade = parseFloat(this.state.info.career[cur]['20-29'].made); \n\t\t\t\t\t\t\t    \t\t\t\tlet thirtiesAttempted = parseFloat(this.state.info.career[cur]['30-39'].attempts);\n\t\t\t\t\t\t\t    \t\t\t\tlet thirtiesMade = parseFloat(this.state.info.career[cur]['30-39'].made);\n\t\t\t\t\t\t\t    \t\t\t\tlet fourtiesAttempted = parseFloat(this.state.info.career[cur]['40-49'].attempts);\n\t\t\t\t\t\t\t    \t\t\t\tlet fourtiesMade = parseFloat(this.state.info.career[cur]['40-49'].made); \n\t\t\t\t\t\t\t    \t\t\t\tlet fiftiesAttempted = parseFloat(this.state.info.career[cur]['50+'].attempts);\n\t\t\t\t\t\t\t    \t\t\t\tlet fiftiesMade = parseFloat(this.state.info.career[cur]['50+'].made);\n\n\t\t\t\t\t\t    \t\t\t\t\textra.push(extraAttempted - extraMade);\n\t\t\t\t\t\t    \t\t\t\t\textra.push(extraMade);\n\t\t\t\t\t\t    \t\t\t\t\tchips.push(chipsAttempted - chipsMade);\n\t\t\t\t\t\t    \t\t\t\t\tchips.push(chipsMade);\n\t\t\t\t\t\t    \t\t\t\t\ttwenties.push(twentiesAttempted - twentiesMade);\n\t\t\t\t\t\t    \t\t\t\t\ttwenties.push(twentiesMade);\n\t\t\t\t\t\t    \t\t\t\t\tthirties.push(thirtiesAttempted - thirtiesMade);\n\t\t\t\t\t\t    \t\t\t\t\tthirties.push(thirtiesMade);\n\t\t\t\t\t\t    \t\t\t\t\tfourties.push(fourtiesAttempted - fourtiesMade);\n\t\t\t\t\t\t    \t\t\t\t\tfourties.push(fourtiesMade);\n\t\t\t\t\t\t    \t\t\t\t\tfifties.push(fiftiesAttempted - fiftiesMade);\n\t\t\t\t\t\t    \t\t\t\t\tfifties.push(fiftiesMade);\n\t\t\t\t\t\t\t    \t\t\t\tconst extraData = {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabels: ['Extra Points Missed', 'Extra Points Made'],\n\t\t\t\t\t\t\t\t\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata: extra,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'gray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'#36A2EB',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thoverBackgroundColor: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'gray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'#36A2EB',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t\t\t\t\t\t\t};\t\n\t\t\t\t\t\t\t\t\t\t\t\tconst chipData = {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabels: ['0-19 Missed', '0-19 Made'],\n\t\t\t\t\t\t\t\t\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata: chips,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'gray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'#36A2EB',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thoverBackgroundColor: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'gray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'#36A2EB',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t\t\t\t\t\t\t};\t\n\t\t\t\t\t\t\t\t\t\t\t\tconst twentiesData = {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabels: ['20-29 Missed', '20-29 Made'],\n\t\t\t\t\t\t\t\t\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata: twenties,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'gray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'blue'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thoverBackgroundColor: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'gray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'blue'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t\t\t\t\t\t\t};\t\n\t\t\t\t\t\t\t\t\t\t\t\tconst thirtiesData = {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabels: ['30-39 Missed', '30-39 Made'],\n\t\t\t\t\t\t\t\t\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata: thirties,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'gray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'#36A2EB',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thoverBackgroundColor: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'gray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'#36A2EB',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t\t\t\t\t\t\t};\t\n\t\t\t\t\t\t\t\t\t\t\t\tconst fourtiesData = {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabels: ['40-49 Missed', '40-49 Made'],\n\t\t\t\t\t\t\t\t\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata: fourties,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'gray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'#36A2EB',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thoverBackgroundColor: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'gray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'#36A2EB',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t\t\t\t\t\t\t};\t\n\t\t\t\t\t\t\t\t\t\t\t\tconst fiftiesData = {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabels: ['50+ Missed', '50+ Made'],\n\t\t\t\t\t\t\t\t\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata: fifties,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'gray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'#36A2EB',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thoverBackgroundColor: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'gray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'#36A2EB',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t\t\t\t\t\t\t};\t\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Doughnut data={extraData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Doughnut data={chipData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Doughnut data={twentiesData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Doughnut data={thirtiesData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Doughnut data={fourtiesData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Doughnut data={fiftiesData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t</Grid>\n\t\t\t\t\t\t\t    \t\t\t\t);\n\t\t\t\t\t\t\t    \t\t\t} else if (this.props.playerInfo.pos === 'DEF') {\n\t\t\t\t\t\t\t    \t\t\t\tlet gameLabels = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet pointsAllowed = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet sacks = [];\n\t\t\t\t\t\t\t    \t\t\t\tlet picks = [];\n\t\t\t\t\t\t\t    \t\t\t\tthis.state.logs.games.forEach(game => {\n\t\t\t\t\t\t\t    \t\t\t\t\tgameLabels.push(game.opp);\n\t\t\t\t\t\t\t    \t\t\t\t\tpointsAllowed.push(parseFloat(game.points_allowed));\n\t\t\t\t\t\t\t    \t\t\t\t\tsacks.push(parseFloat(game.sacks));\n\t\t\t\t\t\t\t    \t\t\t\t\tpicks.push(parseFloat(game.interceptions));\n\t\t\t\t\t\t\t    \t\t\t\t});\n\t\t\t\t\t\t\t    \t\t\t\tconst pickedSackedData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: gameLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Interceptions',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: picks\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}, {\n\t\t\t\t\t\t\t    \t\t\t\t\t\tlabel: 'Sacks',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n      \t\t\t\t\t\t\t\t\t\t\t\t\tborderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t        borderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t        hoverBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t    \t\t\t\t\t\tdata: sacks\t\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t\t}]\n\t\t\t\t\t\t\t    \t\t\t\t};\n\t\t\t\t\t\t\t    \t\t\t\t// const pointsAllowedData = {\n\t\t\t\t\t\t\t    \t\t\t\t// \tlabels: gameLabels,\n\t\t\t\t\t\t\t    \t\t\t\t// \tdatasets: [{\n\t\t\t\t\t\t\t    \t\t\t\t// \t\tlabel: 'Points Allowed',\n\t\t\t\t\t\t\t    \t\t\t\t// \t\tfill: false,\n\t\t\t\t\t\t\t\t\t\t\t\t   //      lineTension: 0.1,\n\t\t\t\t\t\t\t\t\t\t\t\t   //      backgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\t\t\t\t\t\t\t   //      borderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t   //      borderCapStyle: 'butt',\n\t\t\t\t\t\t\t\t\t\t\t\t   //      borderDash: [],\n\t\t\t\t\t\t\t\t\t\t\t\t   //      borderDashOffset: 0.0,\n\t\t\t\t\t\t\t\t\t\t\t\t   //      borderJoinStyle: 'miter',\n\t\t\t\t\t\t\t\t\t\t\t\t   //      pointBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t   //      pointBackgroundColor: '#fff',\n\t\t\t\t\t\t\t\t\t\t\t\t   //      pointBorderWidth: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t   //      pointHoverRadius: 5,\n\t\t\t\t\t\t\t\t\t\t\t\t   //      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t   //      pointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t   //      pointHoverBorderWidth: 2,\n\t\t\t\t\t\t\t\t\t\t\t\t   //      pointRadius: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t   //      pointHitRadius: 10,\n\t\t\t\t\t\t\t    \t\t\t\t// \t\tdata: pointsAllowed\t\t\t\t\t \n\t\t\t\t\t\t\t    \t\t\t\t// \t}]\n\t\t\t\t\t\t\t    \t\t\t\t// };\n\n\t\t\t\t\t\t\t    \t\t\t\tconst pointsAllowedData = {\n\t\t\t\t\t\t\t    \t\t\t\t\tlabels: gameLabels,\n\t\t\t\t\t\t\t    \t\t\t\t\tdatasets: [  {\n\t\t\t\t\t\t\t\t\t\t\t\t    \tlabel: 'Points Allowed',\n\t\t\t\t\t\t\t\t\t\t\t\t      \tbackgroundColor: 'rgba(179,181,198,0.2)',\n\t\t\t\t\t\t\t\t\t\t\t\t      \tborderColor: 'rgba(179,181,198,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t      \tpointBackgroundColor: 'rgba(179,181,198,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t      \tpointBorderColor: '#fff',\n\t\t\t\t\t\t\t\t\t\t\t\t      \tpointHoverBackgroundColor: '#fff',\n\t\t\t\t\t\t\t\t\t\t\t\t      \tpointHoverBorderColor: 'rgba(179,181,198,1)',\n\t\t\t\t\t\t\t\t\t\t\t\t      \tdata: pointsAllowed\n\t\t\t\t\t\t\t\t\t\t\t\t    }]\n\t\t\t\t\t\t\t    \t\t\t\t}\n\n\n\t\t\t\t\t\t\t    \t\t\t\treturn (\n\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\t\t\t\t\t\t\t    \t\t\t\t\t\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<h4>2018 Per Game Stats</h4>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Bar data={pickedSackedData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t<Grid item sm={6}>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t<Radar data={pointsAllowedData}/>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t    \t\t\t\t</Grid>\n\t\t\t\t\t\t\t    \t\t\t\t);\n\t\t\t\t\t\t\t    \t\t\t}\n\t\t\t\t\t\t    \t\t\t})()\n\t\t\t\t\t\t    \t\t}\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Dialog>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\tif (this.props.playerInfo.name != null) {\n\t\t\t\tthis.getPlayerInfo();\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Dialog open={this.props.open} onClose={this.props.onClose}>\n\t\t\t\t\t    <DialogTitle id=\"alert-dialog-title\">Player Info!</DialogTitle>\n\t\t\t\t\t    <DialogContent>\n\t\t\t\t\t\t    \t<CircularProgress />\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t</Dialog>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\n}\nexport default PlayerInfoModal;","import React, {Component} from 'react';\nimport PlayerTable from './PlayerTable';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport DraftedPlayers from './DraftedPlayers';\nimport PlayerInfoModal from './PlayerInfoModal';\n\nconst broker = require('adp-scraper');\n\nclass DraftBoard extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tplayers: {\n\t\t\t\tRB: [],\n\t\t\t\tQB: [],\n\t\t\t\tTE: [],\n\t\t\t\tPK: [],\n\t\t\t\tWR: [],\n\t\t\t\tDEF: []\n\t\t\t},\n\t\t\tdrafted: {},\n\t\t\tdraftedPlayers: [],\n\t\t\tpicked: {},\n\t\t\tplayerInfo: {\n\t\t\t\topen: false,\n\t\t\t\tname: null,\n\t\t\t\tteam: null\n\t\t\t}\n\t\t};\n\n\t\tbroker.getADP()\n\t\t.then(res => {\n\t\t\tlet adpPlayers = {\n\t\t\t\tRB: res.RB,\n\t\t\t\tQB: res.QB,\n\t\t\t\tTE: res.TE,\n\t\t\t\tPK: res.PK,\n\t\t\t\tWR: res.WR,\n\t\t\t\tDEF: res.DEF\n\t\t\t};\n\t\t\tthis.setState({players: adpPlayers});\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err);\n\t\t\treturn;\n\t\t});\n\t\tthis.draftPlayer = this.draftPlayer.bind(this);\n\t\tthis.pickPlayer = this.pickPlayer.bind(this);\n\t\tthis.displayPlayerInfo = this.displayPlayerInfo.bind(this);\n\t\tthis.closePlayerInfo = this.closePlayerInfo.bind(this);\n\t}\n\n\tdisplayPlayerInfo(name, team, pos) {\n\t\tthis.setState({playerInfo: {open: true, name: name, team: team, pos: pos}});\n\t}\n\n\tclosePlayerInfo() {\n\t\tthis.setState({playerInfo: {open: false, name: null, team: null}});\n\t}\n\n\tdraftPlayer(name, pos, team, bye) {\n\t\tif (!this.state.picked[name]) {\n\t\t\tconst newSelected = Object.assign({}, this.state.drafted);\n\t\t\tconst draftedClone = [...this.state.draftedPlayers];\n\t\t\tnewSelected[name] = !this.state.drafted[name];\n\t\t\tif (newSelected[name]) {\n\t\t\t\tdraftedClone.push({\n\t\t\t\t\tname: name,\n\t\t\t\t\tpos: pos,\n\t\t\t\t\tteam: team,\n\t\t\t\t\tbye: bye\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < draftedClone.length; i++) {\n\t\t\t\t\tif (draftedClone[i].name === name) {\n\t\t\t\t\t\tdraftedClone.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tdrafted: newSelected,\n\t\t\t\tdraftedPlayers: draftedClone\n\t\t\t});\n\t\t}\n\t}\n\n\tpickPlayer(name) {\n\t\tconst newSelected = Object.assign({}, this.state.picked);\n\t\tif (!this.state.drafted[name]) {\n\t\t\tnewSelected[name] = !this.state.picked[name];\n\t\t\tthis.setState({\n\t\t\t\tpicked: newSelected\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.state.players.RB.length != 0) {\n\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t<Box m={1}>\n\t\t\t\t\t\t<PlayerInfoModal open={this.state.playerInfo.open} playerInfo={this.state.playerInfo} onClose={this.closePlayerInfo}/>\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t   \t<Grid item md={10}>\n\t\t\t\t\t\t   \t\t<Grid container>\n\t\t\t\t\t\t   \t\t\t<Grid item md={4}>\n\t\t\t\t\t\t   \t\t\t\t<Box m={1}>\n\t\t\t\t\t\t\t   \t\t\t\t<Paper>\n\t\t\t\t\t\t\t   \t\t\t\t\t<Paper style={{backgroundColor: '#f44336'}}>Running Backs</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<PlayerTable players={this.state.players.RB} \n\t\t\t\t\t\t\t\t\t\t\t\ttogglePick={this.pickPlayer} \n\t\t\t\t\t\t\t\t\t\t\t\ttoggleDraft={this.draftPlayer}\n\t\t\t\t\t\t\t\t\t\t\t\tpicked={this.state.picked}\n\t\t\t\t\t\t\t\t\t\t\t\tdrafted={this.state.drafted}\n\t\t\t\t\t\t\t\t\t\t\t\tpos={\"RB\"}\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayInfo={this.displayPlayerInfo}/>\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={4}>\n\t\t\t\t\t\t\t\t\t\t<Box m={1}>\n\t\t\t\t\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<Paper style={{backgroundColor: '#2196f3'}}>Wide Recievers</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<PlayerTable players={this.state.players.WR} \n\t\t\t\t\t\t\t\t\t\t\t\ttogglePick={this.pickPlayer} \n\t\t\t\t\t\t\t\t\t\t\t\ttoggleDraft={this.draftPlayer}\n\t\t\t\t\t\t\t\t\t\t\t\tpicked={this.state.picked}\n\t\t\t\t\t\t\t\t\t\t\t\tdrafted={this.state.drafted}\n\t\t\t\t\t\t\t\t\t\t\t\tpos={\"WR\"}\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayInfo={this.displayPlayerInfo}/>\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={4}>\n\t\t\t\t\t\t\t\t\t\t<Box m={1}>\n\t\t\t\t\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<Paper style={{backgroundColor: '#009688'}}>Quater Backs</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<PlayerTable players={this.state.players.QB} \n\t\t\t\t\t\t\t\t\t\t\t\ttogglePick={this.pickPlayer} \n\t\t\t\t\t\t\t\t\t\t\t\ttoggleDraft={this.draftPlayer}\n\t\t\t\t\t\t\t\t\t\t\t\tpicked={this.state.picked}\n\t\t\t\t\t\t\t\t\t\t\t\tdrafted={this.state.drafted}\n\t\t\t\t\t\t\t\t\t\t\t\tpos={\"QB\"}\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayInfo={this.displayPlayerInfo}/>\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t<Grid item md={4}>\n\t\t\t\t\t\t\t\t\t\t<Box m={1}>\n\t\t\t\t\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<Paper style={{backgroundColor: '#8bc34a'}}>Tight Ends</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<PlayerTable players={this.state.players.TE} \n\t\t\t\t\t\t\t\t\t\t\t\ttogglePick={this.pickPlayer} \n\t\t\t\t\t\t\t\t\t\t\t\ttoggleDraft={this.draftPlayer}\n\t\t\t\t\t\t\t\t\t\t\t\tpicked={this.state.picked}\n\t\t\t\t\t\t\t\t\t\t\t\tdrafted={this.state.drafted}\n\t\t\t\t\t\t\t\t\t\t\t\tpos={\"TE\"}\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayInfo={this.displayPlayerInfo}/>\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={4}>\n\t\t\t\t\t\t\t\t\t\t<Box m={1}>\n\t\t\t\t\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<Paper style={{backgroundColor: '#ff9800'}}>Kickers</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<PlayerTable players={this.state.players.PK} \n\t\t\t\t\t\t\t\t\t\t\t\ttogglePick={this.pickPlayer} \n\t\t\t\t\t\t\t\t\t\t\t\ttoggleDraft={this.draftPlayer}\n\t\t\t\t\t\t\t\t\t\t\t\tpicked={this.state.picked}\n\t\t\t\t\t\t\t\t\t\t\t\tdrafted={this.state.drafted}\n\t\t\t\t\t\t\t\t\t\t\t\tpos={\"PK\"}\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayInfo={this.displayPlayerInfo}/>\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item md={4}>\n\t\t\t\t\t\t\t\t\t\t<Box m={1}>\n\t\t\t\t\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<Paper style={{backgroundColor: '#795548'}}>Defense</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<PlayerTable players={this.state.players.DEF} \n\t\t\t\t\t\t\t\t\t\t\t\ttogglePick={this.pickPlayer} \n\t\t\t\t\t\t\t\t\t\t\t\ttoggleDraft={this.draftPlayer}\n\t\t\t\t\t\t\t\t\t\t\t\tpicked={this.state.picked}\n\t\t\t\t\t\t\t\t\t\t\t\tdrafted={this.state.drafted}\n\t\t\t\t\t\t\t\t\t\t\t\tpos={\"DEF\"}\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayInfo={this.displayPlayerInfo}/>\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\t\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item md={2}>\n\t\t\t\t\t\t\t\t<Paper>My Team</Paper>\n\t\t\t\t\t\t\t\t<DraftedPlayers draftedPlayers={this.state.draftedPlayers}/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Box>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn(\n     \t    \t<LinearProgress />\n\t\t\t);\n\t\t}\n\t}\n}\nexport default DraftBoard;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport DraftBoard from './components/DraftBoard';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\">\n              Draft Master\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <DraftBoard/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}